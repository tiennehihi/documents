"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isStrongPrecedenceNode = exports.getWrappingFixer = void 0;
const utils_1 = require("@typescript-eslint/utils");
/**
 * Wraps node with some code. Adds parenthesis as necessary.
 * @returns Fixer which adds the specified code and parens if necessary.
 */
function getWrappingFixer(params) {
    const { sourceCode, node, innerNode = node, wrap } = params;
    const innerNodes = Array.isArray(innerNode) ? innerNode : [innerNode];
    return (fixer) => {
        const innerCodes = innerNodes.map(innerNode => {
            let code = sourceCode.getText(innerNode);
            // check the inner expression's precedence
            if (!isStrongPrecedenceNode(innerNode)) {
                // the code we are adding might have stronger precedence than our wrapped node
          