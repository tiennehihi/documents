rop)) {
                  return;
                }
                if (initialSupport && Object.prototype.hasOwnProperty.call(toInitial, lowerCasedProp) && decl.value.toLowerCase() === toInitial[
                  /** @type {keyof toInitial} */
                  lowerCasedProp
                ]) {
                  decl.value = initial;
                  return;
                }
                if (decl.value.toLowerCase() !== initial || !fromInitial[
                  /** @type {keyof fromInitial} */
                  lowerCasedProp
                ]) {
                  return;
                }
                decl.value = fromInitial[
                  /** @type {keyof fromInitial} */
                  lowerCasedProp
                ];
              });
            }
          };
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/cssnano-utils/src/rawCache.js
var require_rawCache = __commonJS({
  "node_modules/cssnano-utils/src/rawCache.js"(exports2, module2) {
    "use strict";
    function pluginCreator() {
      return {
        postcssPlugin: "cssnano-util-raw-cache",
        /**
         * @param {import('postcss').Root} css
         * @param {{result: import('postcss').Result & {root: {rawCache?: any}}}} arg
         */
        OnceExit(css, { result }) {
          result.root.rawCache = {
            colon: ":",
            indent: "",
            beforeDecl: "",
            beforeRule: "",
            beforeOpen: "",
            beforeClose: "",
            beforeComment: "",
            after: "",
            emptyBody: "",
            commentLeft: "",
            commentRight: ""
          };
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/cssnano-utils