ista solo tiene hijos directos que est√°n permitidos dentro de elementos <li>",
      "fail": "El elemento de lista tiene hijos directos que no est√°n permitidos dentro de elementos <li>"
    },
    "structured-dlitems": {
      "pass": "Cuando no est√° vac√≠o, el elemento tiene tanto elementos <dt> como <dd>",
      "fail": "Cuando no est√° vac√≠o, el elemento no tiene al menos un elemento <dt> seguido por, al menos, un elemento <dd>"
    },
    "caption": {
      "pass": "El elemento multimedia tiene una pista de subt√≠tulos",
      "incomplete": "Comprobar que hay disponibles subt√≠tulos para el elemento"
    },
    "frame-tested": {
      "pass": "El marco incorporado fue probado con axe-core",
      "fail": "El marco incorporado no se pudo probar con axe-core",
      "incomplete": "El marco incorporado a√∫n tiene que probarse con axe-core"
    },
    "css-orientation-lock": {
      "pass": "La pantalla es manejable y no existe bloqueo de orientaci√≥n",
      "fail": "Se aplica bloqueo de orientaci√≥n CSS y hace que la pantalla sea inmanejable",
      "incomplete": "No se puede determinar  si hay bloqueo de orientaci√≥n CSS"
    },
    "meta-viewport-large": {
      "pass": "La etiqueta <meta> no impide un zum significativo en dispositivos m√≥viles",
      "fail": "La etiqueta <meta> limita el zum en dispositivos m√≥viles"
    },
    "meta-viewport": {
      "pass": "La etiqueta <meta> no impide el zum en dispositivos m√≥viles",
      "fail": "${data} en la etiqueta <meta> impide el zum en dispositivos m√≥viles"
    },
    "header-present": {
      "pass": "La p√°gina tiene un 'header'",
      "fail": "La p√°gina no tiene un 'header'"
    },
    "heading-order": {
      "pass": "Horden de encabezados v√°lido",
      "fail": "Orden de encabezados no v√°lido"
    },
    "internal-link-present": {
      "pass": "Encontrado enlace de salto ('skip') v√°lido",
      "fail": "No se han encontrado enlaces de salto ('skip') v√°lidos"
    },
    "landmark": {
      "pass": "La p√°gina tiene una regi√≥n punto de referencia",
      "fail": "La p√°gina no tiene una regi√≥n punto de referencia"
    },
    "meta-refresh": {
      "pass": "La etiqueta <meta> no refresca la p√°gina inmediatamente",
      "fail": "La etiqueta <meta> fuerza el refresco programado de la p√°gina"
    },
    "p-as-heading": {
      "pass": "Los elementos <p> no se han dise√±ado como encabezados",
      "fail": "Deber√≠an usarse elementos de encabezado en vez de elementos <p> con estilos"
    },
    "region": {
      "pass": "Todo el contenido de la p√°gina est√° incluido en puntos de referencia",
      "fail": "La p√°gina tiene contenido no incluido en puntos de referencia"
    },
    "skip-link": {
      "pass": "Existe el destino del enlace de salto ('skip')",
      "incomplete": "El destino del enlace de salto ('skip') deber√≠a volverse visible en la activaci√≥n",
      "fail": "No hay destino para el enlace de salto ('skip')"
    },
    "unique-frame-title": {
      "pass": "El atributo title del elemento es √∫nico",
      "fail": "El atributo title del elemento no es √∫nico"
    },
    "duplicate-id-active": {
      "pass": "El documento no tiene elementos activos que compartan el mismo atributo id",
      "fail": "El documento tiene elementos activos con el mismo atributo id: ${data}"
    },
    "duplicate-id-aria": {
      "pass": "El documento no tiene elementos referidos con ARIA o etiquetas que compartan el mismo atributo id",
      "fail": "El documento tiene m√∫ltiples elementos referidos con ARIA con el mismo atributo id: ${data}"
    },
    "duplicate-id": {
      "pass": "El documento no tiene elementos est√°ticos que compartan el mismo atributo id",
      "fail": "El documento tiene m√∫ltiples elementos est√°ticos con el mismo atributo id"
    },
    "aria-label": {
      "pass": "El atributo aria-label existe y no est√° vac√≠o",
      "fail": "El atributo aria-label no existe o est√° vac√≠o"
    },
    "aria-labelledby": {
      "pass": "El atributo aria-labelledby existe y hace referencia a elementos visibles para lectores de pantalla",
      "fail": "El atributo aria-labelledby no existe, hace referencia a elementos inexistentes o hace referencia a elementos vac√≠os"
    },
    "avoid-inline-spacing": {
      "pass": "No se han especificado estilos 'inline' con '!important' que afecten al espaciado de texto",
      "fail": {
        "singular": "Eliminar '!important' de inline styles ${data.values}, porque su anulaci√≥n no est√° admitida en la mayor√≠a de navegadores",
        "plural": "Eliminar '!important' de inline style ${data.values}, porque su anulaci√≥n no est√° admitida en la mayor√≠a de navegadores"
      }
    },
    "button-has-visible-text": {
      "pass": "El elemento tiene texto interno visible para lectores de pantalla",
      "fail": "El elemento no tiene texto interno visible para lectores de pantalla"
    },
    "doc-has-title": {
      "pass": "El documento tiene un elemento <title> no vac√≠o",
      "fail": "El documento no tiene un elemento <title> no vac√≠o"
    },
    "exists": {
      "pass": "El elemento no existe",
      "fail": "El elemento existe"
    },
    "has-alt": {
      "pass": "El elemento tiene un atributo alt",
      "fail": "El elemento no tiene un atributo alt"
    },
    "has-visible-text": {
      "pass": "El elemento tiene texto visible para lectores de pantalla",
      "fail": "El elemento no tiene texto visible para lectores de pantalla"
    },
    "is-on-screen": {
      "pass": "El elemento no es visible",
      "fail": "El elemento es visible"
    },
    "non-empty-alt": {
      "pass": "El elemento tiene un atributo alt no vac√≠o",
      "fail": "El elemento no tiene atributo alt o el atributo alt est√° vac√≠o"
    },
    "non-empty-if-present": {
      "pass": {
        "default": "El elemento no tiene un atributo de valor",
        "has-label": "El elemento tiene un atributo de valor no vac√≠o"
      },
      "fail": "El elemento tiene un atributo de valor y el atributo de valor est√° vac√≠o"
    },
    "non-empty-title": {
      "pass": "El elemento tiene un atributo title",
      "fail": "El elemento no tiene atributo title o el atributo title est√° vac√≠o"
    },
    "non-empty-value": {
      "pass": "El elemento tiene un atributo de valor no vac√≠o",
      "fail": "El elemento no tiene un atributo de valor o el atributo de valor est√° vac√≠o"
    },
    "role-none": {
      "pass": "La sem√°ntica predeterminada del elemento se anul√≥ mediante role=\"none\"",
      "fail": "La sem√°ntica predeterminada del elemento no se anul√≥ mediante role=\"none\""
    },
    "role-presentation": {
      "pass": "La sem√°ntica predeterminada del elemento se anul√≥ mediante role=\"presentation\"",
      "fail": "La sem√°ntica predeterminada del elemento no se anul√≥ mediante role=\"presentation\""
    },
    "caption-faked": {
      "pass": "La primera fila de una tabla no se usa como t√≠tulo ('caption')",
      "fail": "La primera fila de la tabla deber√≠a ser un t√≠tulo ('caption') en vez de una celda de tabla"
    },
    "html5-scope": {
      "pass": "El atributo scope solo se usa en elementos de encabezados de tabla (<th>)",
      "fail": "En HTML 5, los atributos scope solo se pueden usar en elementos de encabezados de tabla (<th>)"
    },
    "same-caption-summary": {
      "pass": "El contenido del atributo summary y de <caption> no est√°n duplicados",
      "fail": "El contenido del atributo summary y del elemento <caption> son id√©nticos"
    },
    "scope-value": {
      "pass": "El atributo scope se usa correctamente",
      "fail": "El valor del atributo scope solo puede ser 'row' o 'col'"
    },
    "td-has-header": {
      "pass": "Todas las celdas de datos no vac√≠as tienen encabezados de tabla",
      "fail": "Algunas celdas de datos no vac√≠as no tienen encabezados de tabla"
    },
    "td-headers-attr": {
      "pass": "El atributo headers se usa exclusivamente para hacer referencia a otras celdas de la tabla",
      "fail": "El atributo headers no se usa exclusivamente para hacer referencia a otras celdas de la tabla"
    },
    "th-has-data-cells": {
      "pass": "Todas las celdas de encabezados de tabla hacen referencia a celdas de datos",
      "fail": "No todas las celdas de encabezados de tabla hacen referencia a celdas de datos",
      "incomplete": "Hay celdas de datos de la tabla ausentes o vac√≠as"
    },
    "hidden-content": {
      "pass": "Se ha analizado todo el contenido de la p√°gina.",
      "fail": "Hubo problemas al analizar el contenido de esta p√°gina.",
      "incomplete": "Hay contenido oculto en la p√°gina que no fue analizado. Necesitar√°s activar la visualizaci√≥n de este contenido a fin de analizarlo."
    }
  },
  "failureSummaries": {
    "any": {
      "failureMessage": "Corregir cualquiera de las siguientes incidencias:{{~it:value}}\n  {{=value.split('\\n').join('\\n  ')}}{{~}}"
    },
    "none": {
      "failureMessage": "Corregir (todas) las siguientes incidencias:{{~it:value}}\n  {{=value.split('\\n').join('\\n  ')}}{{~}}"
    }
  },
  "incompleteFallbackMessage": "Corregir (todas) las siguientes incidencias:{{~it:value}}\n  {{=value.split('\\n').join('\\n  ')}}{{~}}"
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     xÄ˘ÕÊÈ´J‰ç‡pEb∂êm=ÎTà#~Ì˜®˝bˆ4b§`±ΩF> îe8Y¯∞VŒyì—∫∂H)≈Œ_(-y“Ìj#øLÒö/&√
^æ.πzM∂Ùå·[xπˆ€7O”Êﬂ}e	V⁄´ﬂ⁄z©`€já“€§yèR∞|ÔÆ=y8±ÿ⁄DA¡U ∂rÜGr¢/µL67˜‹±ÌÈ¡q|‹,edlT¸ÕÊ≤•„€°∫øNb∂t˚@‡≠Éöﬁ◊xØØÕk[OÌÜÇ‡.Ùl∂OB±Ã=]j"/ÿp3ÌËDßWw≠∆«?.W¨€3ı_5¢Ï·≤EJx«≈á§‰ÙlQàe*™äÀ7ëRËiTäôÍ¨¢ {grÍ»∂–tî[dãÍ‰®¶¨jê≥K–xÒì±DKvc6áÚf2±˜oî“Û ¡Ràç–úÚRÙ»8ÓÎˆë∂3Ùz”·\8DdõÈêLó]
\πeπ~¶Î‚w‰t:∏ÔÂìzeMπ~K›ºAá™.˝¿‡	pI˚ÕàÈk8y:ÃˇQ¿RZ ÎÓ»SN—
Qî°åä9ƒS∫ZÁ0lEeΩdÌ∑…—ñFè}çƒ4≈xö —◊|E
”˘74ùÑB…çnn']Jè$$@)Å„[âØÔù¬ócÈ,ÿ5ÿë=ÒyeßZxºTÁÍ41∂¨≤B›Ì.M
åõ?_a?ø[OºÒF·
b#–ÅäÜ1Ω Ë¸ë:'V+5∂¢%ú!n®Lı±E”(Iñœò“^lBÒ_œ©dfwøö[¶;E≤n–aΩ›Õá≈%„gÉo^—û~Lï	\;Ã°·J&á—∏ÿ/.µ›m~ù`õ°ùøâã£m–€†©>.3∏j[∑Õ$R&s÷4’<P~óÂ∆ñF-(OÅSCå∞ïZ—µ≠…ı†S‚zcªö^|–∂®[Ü`1’%0M2xΩi`àƒŸkîáí¡MAÂ7#»`x63ùÂBE] Bó=ﬁ‚ºVsùm†‘"këÏ—C˝¨±nGTo¢≈ç0~»•ß7“çbN â∑kmëåß6≠-ñ˚®Ñ˚¬ÆWÕ”ˇüÅ◊q∞öêë›)°®Ó±¸≥yE¸◊W∑:J1C|ÜÔ·±Ê3˙5Ñs≈ñ√∫b˜g	Çæì)ˇvV‚ﬁ&BsXR8“‰œPmòﬂRníV≠MDPı“úƒåÌõjt√ÃÄ¶‚ÅÈHd—%¢´è‰k≈ÖÛÜåÂCrd©i>._“w:Z_Cá›8r.mÒ>±»≤?s¡èlXÌ´©1»_J“≈Õ2KF ŸŒè_L5O˙à∑R$ÿb?i ê$“˙zP<õGÉ¯Õm=È
˝Œjk¥*Èæ-È—∑Y…üøl}Ù[ÒÚd¬∞\Êl^r¡™áÇ ^çM™$•ä∏Vá1„G≤∆Ù$º9‹
 !®ÉÃÔ2H¢eUŸ¬sJêp„C’9È·Ç£≥Æ–íp;EÎ…2ƒïœ*∞~ÑƒN(úùÔkDÔõ∆oi°&ã¢CN–˚vè˘.Etu¥tÑ¬v`ÿŸéc/§•êkÏÆu≈«ù≥Vj©èQÜ,∫„öó“;»›Qˆ4Ÿoœ\[P}tºjP˙yRıüm˚Y∞ÖéÍ¶ÊÄ˛hÕãu	≤ûÑOûÍ†1√Vj.∂©:ÀÆ÷YÉÒ˚6ı?Ó‡¿jêóc*z
çß`ÖË˛∫ÏÛ:x®1Ô#Gπ{&›ã ßó£™ÒG˙Cí zåN“öÈZ.RŸ2Z˜ç.L‰zJŸpQö“LnSv‹Ö_ü±˚5úË‡Ÿ'ÿÏ ¢7IÉEÅNË_MŸeb˛tÚ›’)aãdê$;G-úøVIÏÕ[Ï@?\¨;OËôËûj M⁄’lH˚_öÕ¨<S0·$X<)n‹´ÿ∏üå«óÊME'óÀ&ÀK…ÿ'Ib"ﬂÔ¨ n∂‹•ä¡0PAiŸ¢vªæÀµ7F¥æ-U:Lr<R≥a"ì≠Ê„{∆∞ôë›5Ç Z§dG>·ôÜ≤7TßØpêIÍ+fO9√qÂ&\&Ä_Øá_C„EÆúà<_Îä!Öî @éîRT5Ê6√ u¥ÌïV·ﬁúô˝,ù¯ÿ˛óŒÜ¡ÊË˜#3
•j®ldJ)x√lyãQ∑∫¥!È¥5$∂©•„¬Ω+ü≈éº±Ïˇ≈˘çºÅ,¶∫!ÏŸ≥Èp[ÇîÑSeV”ÑwvmuZb	={ó	2r»ﬁ9è¡ß:$óDpñ∂üº=›¸¶>”fW¨	æ≥¢à[ê†7ãDG•YÏmÒåô~˙ëJﬁ¬nP¬YGµƒz	Wœ˙j]PtD:¸&ÿÈ∞°%Ö€ıSC~j")√+ú'±u‡˜å@í†≥¸Ä›ÊÀ€P~®˚◊>„ﬂ+…wÌ5¬güNø∆ÏfçA∫|ybp-π{T⁄_›≤ejˆõuÈ`˘\õ~uÓGD¿©£{˙w°ATfÈg¥•Ÿ#Jº±]ˆW§T™®,ÕL≠qxQ ≈ŸÏT<‰:öwä∏YÄ⁄VˆVˆOﬂÚEwäı´i¸v≤'èm˙/WaC-®¢ÊÇe˘¯Û$›˚z3∆}[n>+©rËêÁkïñ˙¿ΩÛ÷˝@ˇØßˆüc¨-∞!ø‰ë∂—˚!)Ñ˛(\ä¨KKrLw±Å‚êÌi˛ê}"¡h™?K˚àI·=Jœm¡ÇXH°ûaÊôoÛKÁó3øÉÒ˙„å6YN€˙˝ˇd€¡Ïß*ÜvªÿÆÍ(faiâ\BV»Y>b>9jë…Ü$ú0ÊÜ8pÏLí–5Ó™®XS≥Õ*IÃ≤À‘Ø≠k›‘À‹çûé—q¯N∆‡˜}Øfâ˘ô£ÿ≠nQåÛÜ÷µ‹˚-O°SYˇ\Æ5
∂äËñKÎöó?°L¡uÉ†å¡åØfÚŸ∫z,˙÷~ÂQWÍ-2ÅÀé∂;iZxJùßfÂ®]Ìev≈ÂºK¨≠$À"“â”±hëÓ ı/¡‡|K+é◊©åR§?ì—>ø1©¯†QÃ`Íˆn⁄Ã◊{HˇëôGÏL©è∆‘•ªË‚ˆ
e¸XµÚNyï¯>öˇmZ%§»7OÀ6Dv$zv<ª\.™ñ¢”B5,8ö:ê´æ
`X«Ù∑÷îÌPãÈZõ\P¸Â≠-⁄C(" +‰QHßojy≤6T 'l∂üDXÃ'1ﬂqZ˘rLk)∞äqûåÁ®∫ûKô‹2ﬁ”uAb@ÁÀ!∏‘ªìz˛yë)7bìg[Áø7ß¡ÓÁ¥˚∞X¢ ±;fë)J	d6å§bæπÿ·9—≥z:"î:ú.±æ◊«'?¡€&	dS⁄Vô}›«02[æ
jq≠¶•Z±µ◊Ÿô–É™å6Dåb–2<6>°É≥e=|®≤`MV˛êpã5 L¯1)«ƒ®•™™J55Ç8vÒ„'S 9ÄáÜÅåÍÛáØ)P7o!mÕÒbÒ
sZÅÈS¨[*∑3r‰ﬁPa£Lqmî’u¨Õ~8É¥Ø~<”6∞!?bøˇV˘•‰±Ê…Œ.‹x§˝öåÒÍ∂éÒ^<≥KØtÑë-≤®ŸÅ8MIM√$Æ‹)nM≈˚Õö¢·†∑°œ.3NîJ‡∑ ∂Fè@ë∑IÊ8#üHÚ&v≤Ó—}Zœ&)6‹–2&˙EoGU´ñ••ÀRÑBA-<4 –ÍÜ“≤µ€$î$πZ:1{ÀÏX≤ñScH}f>”ö¨ÄÛ5lØXv‹ eŸ„„˚GÕáCÎò≥3>8ÀrF[-D⁄!ˆtŸ++"¥Z.˝OåÂAAΩnvJƒÆclFïï@%cW«j5®óSÜ3ˇπ_ˆ{‡Áõ%9ia|;<Ù†wó)ˆ?î¿ˇÍåQˆöbuµ*z[nΩ™àÒIâÈ?eWÌmc¡’ÈD¸Ïiz.<jG¯≈¥dôV…(2QpÏ$ÉÓ6⁄`…)+;æ¯¥1	Âå'?!†Ò7âÜêïx9)ï°ÎMÑw!QΩP~PTãp÷•¨ç€rb™ÙäŸ±8"z[©V¯Eôò4ITq\€eﬁÍgL~ugÆº˛nˆ¶<M<wKm©πÖV{c»x∑ñˆÜg'2ÏB?ﬂ~>ÿÇ,∑ÉÅ†∏¢	â851‡…_˚¬á*\ÎŸﬁ∞ßéÜç ÓıÎU∆æç∑ıO_Ï“«uúÌR&iÜD§ü∂åhê7”≥lí˜†∑]	ø∑åªRYà2 ÇÇV3È‘ÄTÒËÄ+ºF[Ê‡î1ò`≠JfÆs»"~ÀÀˇkÎ 6qFÚ±5ÃCbI^Ò≤pü˝váÇlÈõÆnÏoÛˇN
Äáπ¡⁄>#!´˛»ÀåŸQ
JÑò#´ìòMÊYH¡D#SåÆ#=#t§Y™dÏ´˛Îx˝P¶ä˝oGªnìH5Tà≥ù/ªm_bà-k≈ØSπ°µ\‚êÓ™»HÃê°‰C‹”[9æHåjQMNøÍkû«ê—‹È/≥≤léCY]m¬ŸUA %
—‡íäÕ£!õ7™†„`…ú2#%õπß˙ º´;Yï$#I’~√X	[úîéVÿ·]Ÿ◊\lØKô“ÜöFíu◊:ãt˚ÂﬁÛTœΩ"ÚÕÌDÙ±[ﬂt4ÑÛ„	È?°[?>Ê· W≠¬¢Ä©¿›“ÃqKç˜'Ï»Ò256<≤]ÇE"pA…òâ	˘Úz*oÍÏj"~∆M›±6YñGøGÇœ≠4õ∑≈uà∆uºk7,ä‡«ZèÛÛ†˝uêÔ…#/⁄9ô;  ˇ‰û FO}.(Ó÷ä¢IJ®dtÇà(∂sñhkßƒå.Ai‘fxú‡GÚ7È–kª⁄b ù´E?î·N¬î˚”ÂˆÇ…–¨ÔûäjîüòQT(≠QXqÖ~ôﬁ-7@æHä√5S™Ï‘n8Ö˜ë«Pw*poÏ>Äx2®?∞=¶
'îµ¥W≈XJÖ)SIñQ⁄∆ŒÂ˚ü4+⁄¥gzŸÉº§~dk)}‘^•Ñu˙Ù:ïa6¯·ÑãEÍ-Æ\›q≥´}9‚ä  .kº„%û+slπ™~Ü›ƒzÕÍÈ«˛ﬂûüo¡/´œ‡˜v„˜˚≈D’â ¯≈[äæêË‰l•îc·ÑÛG}¯òx™KÿBíòM3Z|ÊaÒ–§?@ÙdMÇ∑„O‰ÉÑY|Ï˜TnÊÍXÆ¡ÙèqóÕbìKp‹rQB´qlÀÚUîòå0ı,ñ8À€«áìëejÊÿlì(µ÷SI-§÷$•±âf¥h'	˚ômö≥◊/ã˝I:NÔ¨‹|SyÀÆG¥Às›4q&∑l±C⁄¯˚ú6∆aÌıÔj;>Çˇ>˜ˇ}ˇ⁄Ω{µ∏FˇœªÓﬂO–vŸŒøﬂgkvLy·Åˇ›‡¡AYh-€ êªÒ5Vﬂ-B∫ßÏº`Hﬁ&∂g÷Y(  çÒù]‚´ãÂ|ßúvüä6Jß¿%I†áÇı÷¿6$í5M Â£pHœ⁄rÒk\–≠5Îçc¥ˇ°°ÛK©∂ê§j√8˙È¸AQä3 /°åsÂz}JeD\Í€⁄¶‹MY vm⁄[Óˆ∏Ê√[ÓE{Åë3«Ï(Õÿa¶√òΩÇÖÁ}£AÊœﬁô ”ºùù’8ì§Øú∑p¸˚ç7[˘j~ŸxsEË˚ßv∞\É?TÎS8xS=<¶n•ot.Xò¯«ÕÎ4ú~Ã°Û9V`¢Âœ¸ƒî.|‘‹IX-ΩëªoFÀ(8Óû¡û˘˝¡áñ˜l)Û™M—R1KEåÅuäÉR)&,:ô’¿S¬]LdûìUp±*Òv»êáÊ3ß∂yL»óî% ot[∞t©ﬂk4rôzm9ZÏJ⁄fı≥Á4Í&Gè*≤ìªÌJ=§*KMŒ¡‡≤Ûj,B}ÆG95°5>{v>N ìâÖ∫3õÛ÷~ës”Ÿña˙õ·!T SXwÎŸ¥RM‚<˜8@•-tq§tí3H`ˆãƒ+*FS»ìÑ@ìí«·t›-ÇèëÇÖ/∞]Î…{îˆ,a>±ë >ÔÓ’é›ÚÔˆÁím}ﬂB≥ß^)©Ë_z`“/¥y”À€SNÀ®ÙÚπ¸Sı&	Iz‘Á9úUé⁄Ï»≤∂'R¿7Ô˝XN-Ë7[ÛejÊãM^@‚ÔWøÔﬂ¬]=-‰≥®+ƒs∞MràŒœVsÁ+a,œó%læ]@öOâä29^-ô~Jª∆üOê->zÎ+3OÁè≈Çà3H3(°2s?äWÃØHrI…∆úe#úE7›Oj+Ç∏‘Œ£¨b —T≠ÊÇ∞Ü¢aÓ.‚’rı≥‰≠M˜eî6˘ëònﬁıÁJséß*Ò«≠vÂ?fö≤# hÜÌŸ0‰¥AüÚÿ]Ú^‚7jÇ¥õí©’|â ˛m≤≤π~ÅgÜúÙh$Dêû≈$Nüøö<÷Ã¢o»“:kœV\Ê œûﬁ4õèÌKà∂9¡ê >¬åë√´ŸÂ‡ô˜0’Ò?B» ≈Ê>2Å™nDmS3 »µì„Wã	ô‘À_…®—’§ìyÊJAÎÀ&zœ∫î0~rjÆ—Ud¥5´kˆejgQ°™ò»í)ﬂ(˝»qs›®ÿb•¨œ,c˚È'»Â	H"dß√¨∆XÕ<Ã#ÚËGtã…»ä1 ‡‚Ñë˙çH|õü6ƒT∑™Jåøiü©•38†iËÿñ}?°°ˆ8’<qaΩΩ¡[#PÖqın:˙´ábO#vBUss9âUN◊‹#ﬂ%õ“µ∂]Ï˘ín(Ä†Wñ˝„¨^$èÕ·ˇB–≈~23}öã€K‘ùEgC§JhALÑãË*πﬂ⁄
7≠°Dî¶1ÔUiŒázñ–ˆ>√å©Ñö/Ã¡˝Ô„;“k ÃùÓ∏‡µOh˘  ƒÙ‡∞EzFg1éé@®>ûíÑ•»•»ÇêTÎ¶Ã0W£ëÚªZ©:ãeöoﬂû⁄®≠_ïX":ÖDIWã%#√™‘L∞pdë?éjt^DW˚¬é©#¨Z Ô¥Ω‘Ìïx:Ÿ/ÁZEÂ%ˇ!S»ëÏ≥∞ö+R∞{¢a˝∂A°¸éÄêr©zè∞⁄Öù@∞[ã°áQF›≈>î@Éwë*%–¡ÓÆwpWØPìïŒﬂ€OûÊS+"πÊ„Ú\@≠5LŸSp˝>ÛP∫ªù¶Îóü¶Ûù´#1NËâpŸiäkÎ«Wπ"QÄ⁄7Ã$6Ë˚Iüı|l·¥Îî?ú_]î∏ 2ùl¸ªìm6Á#¶ ÇíRSï•1¨Mä´ZXÌõƒç™%3ñìø*ÿäíjca≥LUQmÚá›˝ı2í∂J˚!á…i… ÛE	UzÃå∂∫¶QP˙≠ö”Ì,ùSj9K+F´£›∫6⁄ïÅX◊û]óß-<qÚˆxq£g‚ûigª—ﬁÈ"hàÿ¬iùgkKä—èü:”x∂Z-¿‡˛«b9X—ﬂ6‘’⁄“¸ßn»øZπQq€x*∆ÁH+úRh§>ó‰,÷LÈÕ>1Mˆ]∑…ŸYp3ÊZËo√±IZv}yy
z•Gê¬Ñ&•:•¿&gê(x´_ø∆¿Â±≈&?—•£q˝}¥òJ=Ù_ÎÄY$´oÄ ¡*}PK) ã&gÂ0›‰ÇûtÒÎ!;I≤9ºLAt	#cYÖ´Mß"
Ô0?Ì{‘ª¯t∫Í)t‚7\Lüñû5›ÚGDè≈Õl\èE√{ùi%Ø√®YL4¬öÅÖä[µz√õ⁄tüî™21 †Z—˝Á:èEà≈éıW‘˜>LÔÆ§xùb…Ú`™`l≠4MU≈gv|•Eû∞†S∆ª[é©ËÚ\=+£˜°EÌ%<¥b4$"ÄÉ’$aw‘≥içÎﬂ1"!πªCAQHN'»«=∆Èz]¥ÇW◊≥9°Ùä1Ω–±À~‹X´*Ìº<HÇ‹màºüs ?›•U™ºpDªõ&¸£Ω=¸·:Ò¥Ô2¬÷e•ûœéH…À	%Ü€?·Oã	2ñﬁ‰ ır xìd√˙4b“∞Çí†Œ4Õá„òÍ%©≈Y;±}ˇÓøÍÏäU™€ûjY&yÔ†ò∫ Ø÷¿âlÏÙ∫ÿ≤Õ“+˘¬5L˘›åÈﬁIè0	–aPÜw®å}â/ÔMˇaQ≤»Ù{bPÈÖ¬‰QF√úÍöT –N2@vÕ√6·˜
:‚÷> /˚;G∂È'⁄ä*±:IêΩo2ãµ™±áêìTOÌJR˝!Æ…ãbçÚØnaGÜ~d™µwü)ﬁ“£øi°IÑS`j¶ﬁ9|$IudØ‘gbüg°qÈÏ/ûˆ¸qäΩœÒAG»´x§Ó˛œA∫BÙ3ü_D˛tÄÁ±}òE£ˇfB•Z€Y‰e<ç+E¡A]8E™á®/bπ˛+3Ó¶F¿lb„;Y2«µjL/€œÕ⁄—ûrU'V«œü‰ˇ|–n›ˆyi'à õq oHóÿL•*„´?+_ﬂ ©*€*Ùøñ]ïc;C6Ö	É˜W¡ˇ-b/åd™’•ßX£û¿5îÕ°ÕæcgÀ8•niu¿é$dœK˛€
Ñ÷ÛìY˚∂?}eÊ=vúA¿N≤¢§ùÍ3˙Sπc∑›&§ÆΩ»æ$àKiÁ˜7äÿob§÷Äüsﬂdé¬”üªX\¶0}÷"‚∑ºËÃóŸJˇ4íìü”≠Ô#ã›Hé øQŸ&ê·;ƒïÑM´pectedClass, details) => {
      if (!(object instanceof expectedClass)) {
        details['expectedClassName'] = expectedClass.name;
        throw new WorkboxError('incorrect-class', details);
      }
    };

    const isOneOf = (value, validValues, details) => {
      if (!validValues.includes(value)) {
        details['validValueDescription'] = `Valid values are ${JSON.stringify(validValues)}.`;
        throw new WorkboxError('invalid-value', details);
      }
    };

    const isArrayOfClass = (value, // Need general type to do check later.
    expectedClass, // eslint-disable-line
    details) => {
      const error = new WorkboxError('not-array-of-class', details);

      if (!Array.isArray(value)) {
        throw error;
      }

      for (const item of value) {
        if (!(item instanceof expectedClass)) {
          throw error;
        }
      }
    };

    const finalAssertExports = {
      hasMethod,
      isArray,
      isInstance,
      isOneOf,
      isType,
      isArrayOfClass
    };

    /*
      Copyright 2018 Google LLC

      Use of this source code is governed by an MIT-style
      license that can be found in the LICENSE file or at
      https://opensource.org/licenses/MIT.
    */
    // Can't change Function type right now.
    // eslint-disable-next-line @typescript-eslint/ban-types

    const quotaErrorCallbacks = new Set();

    /*
      Copyright 2019 Google LLC

      Use of this source code is governed by an MIT-style
      license that can be found in the LICENSE file or at
      https://opensource.org/licenses/MIT.
    */
    /**
     * Adds a function to the set of quotaErrorCallbacks that will be executed if
     * there's a quota error.
     *
     * @param {Function} callback
     * @memberof workbox-core
     */
    // Can't change Function type
    // eslint-disable-next-line @typescript-eslint/ban-types

    function registerQuotaErrorCallback(callback) {
      {
        finalAssertExports.isType(callback, 'function', {
          moduleName: 'workbox-core',
          funcName: 'register',
          paramName: 'callback'
        });
      }

      quotaErrorCallbacks.add(callback);

      {
        logger.log('Registered a callback to respond to quota errors.', callback);
      }
    }

    /*
      Copyright 2018 Google LLC

      Use of this source code is governed by an MIT-style
      license that can be found in the LICENSE file or at
      https://opensource.org/licenses/MIT.
    */
    const _cacheNameDetails = {
      googleAnalytics: 'googleAnalytics',
      precache: 'precache-v2',
      prefix: 'workbox',
      runtime: 'runtime',
      suffix: typeof registration !== 'undefined' ? registration.scope : ''
    };

    const _createCacheName = cacheName => {
      return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix].filter(value => value && value.length > 0).join('-');
    };

    const eachCacheNameDetail = fn => {
      for (const key of Object.keys(_cacheNameDetails)) {
        fn(key);
      }
    };

    const cacheNames$1 = {
      updateDetails: details => {
        eachCacheNameDetail(key => {
          if (typeof details[key] === 'string') {
            _cacheNameDetails[key] = details[key];
          }
        });
      },
      getGoogleAnalyticsName: userCacheName => {
        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);
      },
      getPrecacheName: userCacheName => {
        return userCacheName || _createCacheName(_cacheNameDetails.precache);
      },
      getPrefix: () => {
        return _cacheNameDetails.prefix;
      },
      getRuntimeName: userCacheName => {
        return userCacheName || _createCacheName(_cacheNameDetails.runtime);
      },
      getSuffix: () => {
        return _cacheNameDetails.suffix;
      }
    };

    /*
      Copyright 2020 Google LLC
      Use of this source code is governed by an MIT-style
      license that can be found in the LICENSE file or at
      https://opensource.org/licenses/MIT.
    */

    function stripParams(fullURL, ignoreParams) {
      const strippedURL = new URL(fullURL);

      for (const param of ignoreParams) {
        strippedURL.searchParams.delete(param);
      }

      return strippedURL.href;
    }
    /**
     * Matches an item in the cache, ignoring specific URL params. This is similar
     * to the `ignoreSearch` option, but it allows you to ignore just specific
     * params (while continuing to match on the others).
     *
     * @private
     * @param {Cache} cache
     * @param {Request} request
     * @param {Object} matchOptions
     * @param {Array<string>} ignoreParams
     * @return {Promise<Response|undefined>}
     */


    async function cacheMatchIgnoreParams(cache, request, ignoreParams, matchOptions) {
      const strippedRequestURL = stripParams(request.url, ignoreParams); // If the request doesn't include any ignored params, match as normal.

      if (request.url === strippedRequestURL) {
        return cache.match(request, matchOptions);
      } // Otherwise, match by comparing keys


      const keysOptions = Object.assign(Object.assign({}, matchOptions), {
        ignoreSearch: true
      });
      const cacheKeys = await cache.keys(request, keysOptions);

      for (const cacheKey of cacheKeys) {
        const strippedCacheKeyURL = stripParams(cacheKey.url, ignoreParams);

        if (strippedRequestURL === strippedCacheKeyURL) {
          return cache.match(cacheKey, matchOptions);
        }
      }

      return;
    }

    /*
      Copyright 2019 Google LLC

      Use of this source code is governed by an MIT-style
      license that can be found in the LICENSE file or at
      https://opensource.org/licenses/MIT.
    */
    let supportStatus$1;
    /**
     * A utility function that determines whether the current browser supports
     * constructing a [`ReadableStream`](https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/ReadableStream)
     * object.
     *
     * @return {boolean} `true`, if the current browser can successfully
     *     construct a `ReadableStream`, `false` otherwise.
     *
     * @private
     */

    function canConstructReadableStream() {
      if (supportStatus$1 === undefined) {
        // See https://github.com/GoogleChrome/workbox/issues/1473
        try {
          new ReadableStream({
            start() {}

          });
          supportStatus$1 = true;
        } catch (error) {
          supportStatus$1 = false;
        }
      }

      return supportStatus$1;
    }

    /*
      Copyright 2019 Google LLC

      Use of this source code is governed by an MIT-style
      license that can be found in the LICENSE file or at
      https://opensource.org/licenses/MIT.
    */
    let supportStatus;
    /**
     * A utility function that determines whether the current browser supports
     * constructing a new `Response` from a `response.body` stream.
     *
     * @return {boolean} `true`, if the current browser can successfully
     *     construct a `Response` from a `response.body` stream, `false` otherwise.
     *
     * @private
     */

    function canConstructResponseFromBodyStream() {
      if (supportStatus === undefined) {
        const testResponse = new Response('');

        if ('body' in testResponse) {
          try {
            new Response(testResponse.body);
            supportStatus = true;
          } catch (error) {
            supportStatus = false;
          }
        }

        supportStatus = false;
      }

      return supportStatus;
    }

    /*
      Copyright 2019 Google LLC
      Use of this source code is governed by an MIT-style
      license that can be found in the LICENSE file or at
      https://opensource.org/licenses/MIT.
    */
    /**
     * A helper function that prevents a promise from being flagged as unused.
     *
     * @private
     **/

    function dontWaitFor(promise) {
      // Effective no-op.
      void promise.then(() => {});
    }

    /*
      Copyright 2018 Google LLC

      Use of this source code is governed by an MIT-style
      license that can be found in the LICENSE file or at
      https://opensource.org/licenses/MIT.
    */
    /**
     * The Deferred class composes Promises in a way that allows for them to be
     * resolved or rejected from outside the constructor. In most cases promises
     * should be used directly, but Deferreds can be necessary when the logic to
     * resolve a promise must be separate.
     *
     * @private
     */

    class Deferred {
      /**
       * Creates a promise and exposes its resolve and reject functions as methods.
       */
      constructor() {
        this.promise = new Promise((resolve, reject) => {
          this.resolve = resolve;
          this.reject = reject;
        });
      }

    }

    /*
      Copyright 2018 Google LLC

      Use of this source code is governed by an MIT-style
      license that can be found in the LICENSE file or at
      https://opensource.org/licenses/MIT.
    */
    /**
     * Runs all of the callback functions, one at a time sequentially, in the order
     * in which they were registered.
     *
     * @memberof workbox-core
     * @private
     */

    async function executeQuotaErrorCallbacks() {
      {
        logger.log(`About to run ${quotaErrorCallbacks.size} ` + `callbacks to clean up caches.`);
      }

      for (const callback of quotaErrorCallbacks) {
        await callback();

        {
          logger.log(callback, 'is complete.');
        }
      }

      {
        logger.log('Finished running callbacks.');
      }
    }

    /*
      Copyright 2018 Google LLC

      Use of this source code is governed by an MIT-style
      license that can be found in the LICENSE file or at
      https://opensource.org/licenses/MIT.
    */

    const getFriendlyURL = url => {
      const urlObj = new URL(String(url), location.href); // See https://github.com/GoogleChrome/workbox/issues/2323
      // We want to include everything, except for the origin if it's same-origin.

      return urlObj.href.replace(new RegExp(`^${location.origin}`), '');
    };

    /*
      Copyright 2019 Google LLC
      Use of this source code is governed by an MIT-style
      license that can be found in the LICENSE file or at
      https://opensource.org/licenses/MIT.
    */
    /**
     * Returns a promise that resolves and the passed number of milliseconds.
     * This utility is an async/await-friendly version of `setTimeout`.
     *
     * @param {number} ms
     * @return {Promise}
     * @private
     */

    function timeout(ms) {
      return new Promise(resolve => setTimeout(resolve, ms));
    }

    /*
      Copyright 2019 Google LLC
      Use of this source code is governed by an MIT-style
      license that can be found in the LICENSE file or at
      https://opensource.org/licenses/MIT.
    */
    const MAX_RETRY_TIME = 2000;
    /**
     * Returns a promise that resolves to a window client matching the passed
     * `resultingClientId`. For browsers that don't support `resultingClientId`
     * or if waiting for the resulting client to apper takes too long, resolve to
     * `undefined`.
     *
     * @param {string} [resultingClientId]
     * @return {Promise<Client|undefined>}
     * @private
     */

    async function resultingClientExists(resultingClientId) {
      if (!resultingClientId) {
        return;
      }

      let existingWindows = await self.clients.matchAll({
        type: 'window'
      });
      const existingWindowIds = new Set(existingWindows.map(w => w.id));
      let resultingWindow;
      const startTime = performance.now(); // Only wait up to `MAX_RETRY_TIME` to find a matching client.

      while (performance.now() - startTime < MAX_RETRY_TIME) {
        existingWindows = await self.clients.matchAll({
          type: 'window'
        });
        resultingWindow = existingWindows.find(w => {
          if (resultingClientId) {
            // If we have a `resultingClientId`, we can match on that.
            return w.id === resultingClientId;
          } else {
            // Otherwise match on finding a window not in `existingWindowIds`.
            return !existingWindowIds.has(w.id);
          }
        });

        if (resultingWindow) {
          break;
        } // Sleep for 100ms and retry.


        await timeout(100);
      }

      return resultingWindow;
    }

    /*
      Copyright 2020 Google LLC
      Use of this source code is governed by an MIT-style
      license that can be found in the LICENSE file or at
      https://opensource.org/licenses/MIT.
    */
    /**
     * A utility method that makes it easier to use `event.waitUntil` with
     * async functions and return the result.
     *
     * @param {ExtendableEvent} event
     * @param {Function} asyncFn
     * @return {Function}
     * @private
     */

    function waitUntil(event, asyncFn) {
      const returnPromise = asyncFn();
      event.waitUntil(returnPromise);
      return returnPromise;
    }

    /*
      Copyright 2018 Google LLC

      Use of this source code is governed by an MIT-style
      license that can be found in the LICENSE file or at
      https://opensource.org/licenses/MIT.
    */

    var _private = /*#__PURE__*/Object.freeze({
        __proto__: null,
        assert: finalAssertExports,
        cacheMatchIgnoreParams: cacheMatchIgnoreParams,
        cacheNames: cacheNames$1,
        canConstructReadableStream: canConstructReadableStream,
        canConstructResponseFromBodyStream: canConstructResponseFromBodyStream,
        dontWaitFor: dontWaitFor,
        Deferred: Deferred,
        executeQuotaErrorCallbacks: executeQuotaErrorCallbacks,
        getFriendlyURL: getFriendlyURL,
        logger: logger,
        resultingClientExists: resultingClientExists,
        timeout: timeout,
        waitUntil: waitUntil,
        WorkboxError: WorkboxError
    });

    /*
      Copyright 2019 Google LLC

      Use of this source code is governed by an MIT-style
      license that can be found in the LICENSE file or at
      https://opensource.org/licenses/MIT.
    */
    /**
     * Get the current cache names and prefix/suffix used by Workbox.
     *
     * `cacheNames.precache` is used for precached assets,
     * `cacheNames.googleAnalytics` is used by `workbox-google-analytics` to
     * store `analytics.js`, and `cacheNames.runtime` is used for everything else.
     *
     * `cacheNames.prefix` can be used to retrieve just the current prefix value.
     * `cacheNames.suffix` can be used to retrieve just the current suffix value.
     *
     * @return {Object} An object with `precache`, `runtime`, `prefix`, and
     *     `googleAnalytics` properties.
     *
     * @memberof workbox-core
     */

    const cacheNames = {
      get googleAnalytics() {
        return cacheNames$1.getGoogleAnalyticsName();
      },

      get precache() {
        return cacheNames$1.getPrecacheName();
      },

      get prefix() {
        return cacheNames$1.getPrefix();
      },

      get runtime() {
        return cacheNames$1.getRuntimeName();
      },

      get suffix() {
        return cacheNames$1.getSuffix();
      }

    };

    /*
      Copyright 2019 Google LLC

      Use of this source code is governed by an MIT-style
      license that can be found in the LICENSE file or at
      https://opensource.org/licenses/MIT.
    */
    /**
     * Allows developers to copy a response and modify its `headers`, `status`,
     * or `statusText` values (the values settable via a
     * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}
     * object in the constructor).
     * To modify these values, pass a function as the second argument. That
     * function will be invoked with a single object with the response properties
     * `{headers, status, statusText}`. The return value of this function will
     * be used as the `ResponseInit` for the new `Response`. To change the values
     * either modify the passed parameter(s) and return it, or return a totally
     * new object.
     *
     * This method is intentionally limited to same-origin responses, regardless of
     * whether CORS was used or not.
     *
     * @param {Response} response
     * @param {Function} modifier
     * @memberof workbox-core
     */

    async function copyResponse(.           |5®mXmX  6®mXç§    ..          |5®mXmX  6®mX,i    Bs   ˇˇˇˇˇˇ üˇˇˇˇˇˇˇˇˇˇˇˇ  ˇˇˇˇs w - t e  üm p l a t e   . j SW-TEM~1JS   7®mX|X  9®mX•
  B. t s   ˇˇ °ˇˇˇˇˇˇˇˇˇˇˇˇ  ˇˇˇˇs w - t e  °m p l a t e   . d SW-TEM~1TS   ‹®mXmX  ›®mXí√"	                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = _createTester;

var _breakLoop = require('./breakLoop.js');

var _breakLoop2 = _interopRequireDefault(_breakLoop);

var _wrapAsync = require('./wrapAsync.js');

var _wrapAsync2 = _interopRequireDefault(_wrapAsync);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _createTester(check, getResult) {
    return (eachfn, arr, _iteratee, cb) => {
        var testPassed = false;
        var testResult;
        const iteratee = (0, _wrapAsync2.default)(_iteratee);
        eachfn(arr, (value, _, callback) => {
            iteratee(value, (err, result) => {
                if (err || err === false) return callback(err);

                if (check(result) && !testResult) {
                    testPassed = true;
                    testResult = getResult(true, value);
                    return callback(null, _breakLoop2.default);
                }
                callback();
            });
        }, err => {
            if (err) return cb(err);
            cb(null, testPassed ? testResult : getResult(false));
        });
    };
}
module.exports = exports.default;                                                                                                                                                                                                                                                                                                                    2ê0Œ›ióZ6‹4üñnkLø6J◊
œá8pÕb›¶Øjßçﬂ9∫&∆Ìº©uÃè∫ßZQokNπ>æ÷n?y *G2˜Yü
C…/¿M§ˇ´Â0÷§ÿùI%‚∆ X1≠ª\ÿ%#§ŒìQ ÿ±f„⁄~vùu◊Á	?DwWÕ∏æ?|ÕÌL~ï˚t,Å˘jªßJm;M§·3›“qèo§=≠i,ıœsU|ÿôµ44%ydâÚπ¥¨’ÊÜYd%,Es']ä‰È¸O–8 ÑÄ408?¡‘+ñY„àﬁ—∑∫j®Cà∫bœ°0º+
V÷∫ N+ÃÜáÖ+Å∆µAÎ˛xTç$ìƒƒWhægfréÖÇ¸˘ıÏV.uÖÖ8	!–hÂyÜíCêçÍﬂ•^v†€ÙË:ò5ÔKøEÈ∑¿»°·˜◊m˘!@¡oubj]4¸ÑñAëY0®ˆ^ñ⁄e+oV=2[vª›FÚ%f7uh7ÛQISÑ9#7ı´qåYé >Z2zËéÜ i`å≥QíB©1ëÒ)
ß~l7ﬁq`‰úo¿ƒÊÆ‚¢¡u∫[˘2∂…≠π<9ÔqOÔ.D u%Ã
âÜ›áªëç∫::V)/ôl±óø˚<µáˆŸÈALÚtªcÈs˜RÚ˘A˛ô @t§0nË6Gçòh.p+ÑA3Nf&	¢Ì2Ωj<(ûÓó’N#ÄzÁz∏xV‰}ÒK≥ìÄ«q9⁄KáN"*ö5Œ∂¬£øò‘≤'GI¡“@W^qqnìÓ-CﬁH«÷…â$9∏’¥Ù ·r¡B'4@ˇ7S ÉxœWºhäœ(ò˝-¿âyéµ–N*ŒQ◊†Qª“1≈n¿E¬"1ÒJRÈi#ãe›~¥òèoILFMM$ãà›]ÎqˆI”S°ÿ,’:© ")Ö≈:ÁÑ™W—ôπ1E®™ò#Ob¥Ì˛ª:>"SàºTî≥¸’ˇèp|>Ø1ÙÏ-¯Uêù9‡¬˜˝XÿãFöj±@”îbS9ÎwQj¨dí¨,·É—¶/æ(Ö,ZI†∫Pä“D…¬*ûÎyIu˙ÓggÂ'-	”EÑ£
ª$Zè±}J Áû˚C	:ßùL]ÏàÜŸπ4J8‘dtEbíZ&8ÍK?´,-
¥Í>+‚3Î=“°PF¡xJ,kû{g¨z„D‡ s¡Cq>=Æ/+πÿÕrúÃàƒt%√ï√*Ìá‡óá˚ãüﬁ$…?—mCîk∂"“ëóÅe6ºπ≠1æ∂Ha„‹œ_)+Ö…9ÛØ}(Ë»>ª<ÌˆÇ»J» ∏®ÕÚOtís!“¨!ûÂI|J‘ÛÚg◊}°~àπ$-øæªÆÄ˛Á°«ºoIÑ ;=∆ é(’Î^b@QÁàSbx&<ú'Ì¡œr6˛bnf}ÈªÁ0≥uˆÔ¸‚ñ¨É7⁄6óâ`Ó—¯Ã1Häg¨£n‹w|˘“ÃXÈ–›3‚;;ÿ <ì±Â∂±ö{˚F4=·jã72~4ò©<∂Ãêsx¿±Êx ®ØÔ8î
5!ê}äbX®P1ÛN0àob¸)+Hÿ´à‰„Ög≥:‡∏ú∑]&≠n&Au>3!ò±{Z¸é!yµÿÕ2òÓãn1bòEMb*ÿÑPT~Ü°Ÿ¶6◊ OkòÊc–YŸ0ç“%ñ¶ê≥°ÿÅ|–æì4Èv#ñTKYù/ë%∏åL“›í:≈L©gò∏2ÿƒ§«[∂Ö≥›.E≈!◊´◊H=ík\M‹tu„}`∑4™ÕN7˜Ω¶‘èW¡f¿uÏ∏…M„HÇR∞JßMò¢\G+Ô<≥√Æ8y∞S|~M”
9√öoÙ∂Sl˜ûjuŒ–∑ï˚≤zôdf–´ñÔpî0å”PÙ€J±¨∆3jè#—5Ä˛Á∂M§Ÿ2a T≠Ê·sE“Îˆª¬u2‚CØ1/5<^ééÍbt¡ˆtdOâ}h<Q¬¸w9ÖÜë"°Tp™·G‰Ä^ aÈ;D´„õ÷lavπä≤L€®Ù®baÜeúïy'“Î¡LeQ"ó¨ÛA√|1‡G˙(:‡´ÄR IQ"à˘Œâà®œ˛‡±¶AgÍ√|òm„îöÍÈ{&\@ÅÖAíà]ì◊õëÛ⁄˜∆HÄ8À|RNhw¨eîã
æu±ƒÃûü˛äk·øÁ¸¡˚#÷¢–OëÏQ≈Z¡Ω•~Ú¶&©®—Å#c∂E˘≥ÕÿËú2CB"#|§gÑà~êôv®—‘m¡ö©ßƒ@÷˙+ÎŒ(=¨Tf[Û¨ÛPªÌõ´ÙÌ˛5•¿Ù˛BÀ÷kAQÓi˛ü|§/JÄ“—C´Môﬂ ˙+-¡x€(•oAŒ0à›¸â'WS•∞¿O‰XVY
g>óõëO
#
ø»
>Y÷Ô8+©>òœ3ø->ˆ8&M≈jÃzwªk#xìPÌÿv@Äım„ÊuË
Ëb¿∫cuFÿ/_ºÖœOUÑúÎ„Tû°
Górπ¸Ä kjo∞Ræ‹ΩT_Û¯öõŸÑ¯á® ˜òjpÿ®0› ¶öe˚c§¢ñe≠(N.RØΩoÈ Å5ä~µ˛±B”¬yuÇóø⁄«‹†y/KÎmO$lÒ	)‰Ä oç´ÏˆR™´mJ3°E£7™.ûÁ„Lµ\ÑôóV
N;é): K4^€^Än0¬ã˙≈7it≥B™¸ÑBÑ}YÙË[3Ú≥‰/:ß ˆ¬õuï.±`]∆o-Q‹ö7Å∑≠eò≤cM5r†0›©Mz≥ááà€‡.sôIH∞™œ∑êH-V´neˇö”V÷Ô“I†î6FÎ`öWnÅœ˝4“˘Ó,Ÿ(⁄¥ªXÄÎ5Å¢cÑA †'≤ÜR‡:*(Å∏&e”ﬂ P]rnãu*ˇ9fËç=0–Ω∞c≈±q†ß„«R¿™-\}c√çXNZ¥¯≈⁄Zl±YdÖíﬂ›;!cgq{¶Ωü‡m"Jî∫Aﬂöıè–-òK’ñ	
Åà¥ÿ>êw\§æù-ES§p™XH⁄BC˚gG¢V˛ñùLΩÂ{t˙◊>H¸ÊÂµé=’1Ûpê*iæ<èCaÚ´QpJW˙¬Zét/x˚é»•˛õò[èWﬂÑÊÒ’küz2Ø÷Vz[ )^yÌ7‰'mΩÙúh'`$é4D, øë´N£Àæk›–ƒæG}—πøÀ_èsƒhTh†Î]_±ﬁœùn2À~§?æ™C¥≤‹tj	éˇ6ß¯Ò ˝”‚=‚ΩπjoQq bn=\‘_f◊«ÁÎ∫–€Óì5¿£iïlƒròµïW€&Ü÷‡k◊YmH!ZQƒæ*<%	Ú◊÷´Ö—Ò˚m,8Gòó’cî¡»)¡Páéè£&4¨Ωj¨EpAŸﬁ,±°¥M∑ÙEΩ=““ò 0q∫îGu)Q∂Ëû˘4«©ˇ:BUaôîÎJ∆rJÎVÖÄ»$2àI¨∫	Ñág°„PXqµ?ò5E?K…dÈ)äÙ◊—∏RﬂÙ⁄∫2—˛wIÇºÖUGEdQµ‘∫¿årÈuÀ2ÜŸ9í›ñ($*ÍTcá¶¬⁄›òU”∫Ôπ´Í:˜"›<ŸÃÖ/¶n<¶pHÇÆƒUb‹ˆCé©πd‹µ
ŒﬁX≠HÈ\v◊"A/"ç≥J‘ªG˛:ıÊqkäqxHä√7°ÔH™é·ÜtÑ˛ºóbÀJ-÷JóˆÁ∏¢¶Ê≈gÎ1ûÆk°“≤~FL™óπAü˝Tõ«KëtSgJÃh∑m·Ä`¬ÍG»|üå9≠4zC§Wó®ºäπûà≈	#Ê!ÿYQuBIËØ2Pıåg´£¶$gMÕ©Æm≈(Ê≠Ë¬¸eg˛ƒéáFΩ~ó⁄
ß˙Yˆé@üŒJÄöÊﬂö[ˇF˝—ü∏Í_4k¶÷m≤€±ÈÅ.àHcÙ•YÕ0—0ΩE›VÈ¸˜„xv∞›ÌË;´¿‰µÈ8ÅÏ_H[˘–apÁúîÃ≈&(âX÷äbR∆Éû∑*-BÊs1K3
]äºé±â=(Rˆ´f¢ÚÇô,V¿t
H‡õ_5	á–*∞¿f)¬2˝Ö≈˛Ì)àùá@Tôm⁄¿a∏ vsÅ∑!NÑ;îó»K◊%1≥Ñƒû60Û=µ`s3mô∂ùGEbOb¿ˇ…Œ©“(Ï˝eˇ8Ú£L{S~(2*€UAÚëaSÖe±}¯Iùü…≥˙Ú|ÙÌÈ;!cﬂ†Ωìˇ€óﬂS¬ˆßq*1e1ô^n$%z⁄ö‹v 8ò˙ö.Y:gdìÿ®ﬂLûZ¨ìR*FkØBû~Ï|vX®“ß;IÒõ,÷áÛØ¿q¿RB≈;¨¶‘U™ˆQÉ@ ≈Ë ö=ÕGÃ2``_ÆAÜÔVû÷‹#+Üq¢^d‘ãænüô|m^yÅp·ètËhI	qiÚ%Ù˙f&8ª‘ß¶®{æ!⁄€oh!Ác[´ê¯^˙G|¶~Y7Vî› P”ﬁj¿U«œwç‘6LãøÆÏœ_‚ˆƒ√—∏ù	Õπ
°`Ñd˙ŸA®rò*‰8ﬂ•á©Âa”ØòﬁTªÓ9IßŒ,Í"ˆ@Á_±ÖO„‚ﬁ¨(†ø!Ω¨ﬂ@ ,p4 ,†;+Ú¸çß ¢k™[FÁ¨˚ “›0Fá:qvív‘´‰∂j¢#yH∫⁄	dºGS∞%Œ◊Ô7√Ÿ·pH3']—r˘}€®ÆÒ«ªÌ,B~}…Ûﬂ(–Q6øÃ9∏>À´U;äL‘Qº ò7Ÿæ;i*`/ÁÚ◊ò≥fQw‡
3=<§Cc*ãœg≈4“˙<Øˇ#AYûVèË@·°É⁄¶∑	‚)!1«<D?gπIÌ∞IÑí«E?éÌ3a7ŸZ˝#ƒƒÛà(†íb’ É rÒÎoä	&V àÏc˙aË∂æ§4©!o∞¢rÖa2®mÏòû)c@pˆ0
o3\9RG£B+\uŸtÜº<πˆŒ.â(z$‚a2åe_ñπÅãa5dnë¿*5®q¡GÓ“÷Bˇµ‚∏¸ÍØ|÷∫√˘ÓŒ\ksﬁ√èÓëk£@∞†kîΩÒ"AÌ‘Ä ôD¶;#V$ª∂!QPˇ 7˙…\˜Â@èÛYæÑ:5»MwMP?4û1∫◊B’∆
j˝;æåö]°^®À∞hFôË?B#ACB[⁄ßÚJ≤Ê—¶FA®§&.·ô(˙LÃRèÄP”A≠˜]›úÇ\ˆ …ˇ˙QH√'Óï˛ﬂ»Œ∞ÊIléxîµ∏Üñä‹8âè-˙í0òÿã=
?òj0”aL)Ú|•πxuå])µù˛Lf7dé/±°≠çóJO—dQ“Ÿ÷¨Xo13©≠dG9«À<Q%µ¶G◊^Ev]î‡ÏRµŸ¨ôwN⁄yl¨m;Ö›>˝~ÙaTÿ»-{˚S›}@Ài8Ç¬_»V†¯AC5÷_ñB√§,Û88◊Gwn°2⁄6	v<Ô¸-(J.”∆°i?¨≤x§®7ÅaYÃîR≈?=‡kÖ´‘sQdó%ï–LÄ8Ø!9"˜@Öù%6@
É˜7W•Lf|ÖO}∆`»@Â€j&§>âÛ¯ŒÉ58HbA‘RÂßüu¿¨ßD√55ë}£í(csÛö»≈¡∑¿É≈µÏzKÖ™Í-ÌO≈_˛˜%v}†nÖ«L„HTÆÖÛú§Ç¿orK∏à†Ñ§«ˇ	É ßı∑ÆÿïÜm¶˘Éê”ù˘F&dÎôqb∏ˇ`Æn?◊ßŒpSIÂ•˝û∞ÿM°œ]≤ùæ”"sBn4kΩÚ¬(‚–ú…)î¥∏¡«kZgøgÜO9”Ay™±í¡âÅ·ï–lÖ∂¡BñÇy::b‡*ŸD˙k•M	Q
^ï+≤Ûõ2%Ó‚œ†(≠tÛDc@Gªgd£í˝(!Ñ£	Z¸ò@ÙI^Óx—Ã‘€7D≈j¨Ö+»Q6wê4?¥$â‡[∑0Ït§%«å√ÅpJ∆w≠íâ≠Ó∂ì	bÜqœ™h…à¸L!ùPUì V:[÷¡ÅÔÕ∫mÂYNC(›‡Æ5ü¡ÚèNq3O∏,$¡
É+I[Ê≥Oú†:Æ¯Èå÷E‰8G≥ÖördæPÃxèT˚y˛&¥É\ ZÄ?áaì h;ë£p†HxÛx†ÓÛRÔ9°ïÀºPa>în€Ÿ\Ê~/ÙY≈˙;,Ö≈„≤Éƒ3‹OúÉEÇ∏ T¢B={¬òÌ-ÅÚ|Qkõ∆ z“¸sÒ√X$‘{oWxñ*Aºô…ÆC= C4'¢Îc◊Mì¡©U¨H€eUâÀ∞{πm7ö‚hÑ0∞œ‹^ŒÇ>aE•>⁄™≤ÿ—I ‡hÄ‚”>®ﬂà‚[*cµ6I)Èbﬂ^õkyçU°≈åΩdnUÙ)YlÉœç‹T„36c∞ı•|πÂÂ≤4x¨%Ò⁄èﬁzÍ«)|◊Ô’à91OŒ£jÙâ i≤ø/†/p…8«·c¶ãhI ≤jí:pQ ÉÒØÿßHÈ»t±¢™‚≈Ø%5«˝à„ä.ç‚UäC©±HpX∆Õ_◊˛cñO‹]‘õ¸Äj€ä,± #6™“«î0ÌéE≤Ã7!¶¥t‰öñ‚Rç%dÂÚ¡}‘‡™E|#è®·—uÈßŒﬂLË5TÁoÌ¯E˜h#ö6]∫ [S»4B·~{?Õx¿§Ä Ÿg—Êj DπÌNmM^Â ÖZyVù©Œz∆/dl@ÇgÊ	·H"⁄Éé:›6õT‡[f>ˇ Æ"h˛úÔC¡´nl∫GTD$bø¯#—Ñ,¸~7X©dﬂ0ﬂEU‡{B@)ìYÒ¢’2&"]TŸ"G¸†5JèÃÅäã9"Ñø`uˇÂFSÛ3µ∂O∫^üË¢o©hh);° ¶ﬁJd“xyŸ»UëªK˚¬`y®B(%ô s–ùÜ§Lº$HP–æã1‘À¨%ª,≠x(• îq¢ÚQ•®…ƒbU3Bå:ﬂ,D1«å	 DÄ¡ø£Y0T~ì^k·@4°N;›˛åÀÊX}≥R_˛Ã∏.˘°# %Ìm~ IèäÎÜÜ4Ÿ(¬ﬁ◊4¥Öπ5∫O˘˘ï	¿ÔﬁDmîÛS„	±êÎ_‡K˙áöXDä*[¿~∑NV∑âyg·¢ÄÔë‰ `
S1É„EN   êpU⁄_Ñì§\y‹sFôn@l}˜g¬#•è√	¯Íf-˝p6ˆ#‘
;S
E˘À[•n≤ìdl^kìîräÍô´uûN7⁄÷“G¸~?*Ù@ÃœÎE˝Ñ)f»o0¬ìL¥HYqˇ”) ¿´ö ‚æ*Ò˙Úái ‚˙8’0[K¢◊ZÖ«ºBè@[T‰vçHè8ÀlÑ3≤ò†∆Ûf>ãÊïÁEp¥€€MÔÊÌfôsÿ˜<ö®Z{=ªØ∆y’PB.Á∫[îz8Ãıë¸œ%É{òlˇÉ0Ñ&M
–qõgg]3&B˛7ªs·7ﬁ(=vÏÌ–g˝Gvë|vÈ£Ç–e8Ê•HA|√™ì€ÙN§Ì"µU!T  ◊†¢Ø }_Ï {ÚZAØàz©î\ˇX5,k∫ÀögI)zﬂ?å¸ÃÕ_,°9∑08Ω@Ì÷®˙2AzˆÕB°ÈÌ4óòf’àß›Zw€Á˙È≠~ ŸôÔﬂﬁ4∞˚Ùk¢'∫s©ˆ°Î$ÀPëÎ¥˚i˜Œ >®+ï&H8uÓ¸&)IÅoÙw·‰b˜\‹‹‰<9\‘ìzÂAHcÿ4^ã&Í-›ã
¶ˆ1ÉÓ≈B¶‘ÜySß«≈∏:öî ,6@3jªQ≠2¢aÇÌÙI‹`cµmı€∆•Ê)a;ﬁiÊƒê¡¢Rﬂ˛ »?B” G›)8¥{eÚh˛‡$d”9ƒû±	ºîZ‹g∏uÈ|ZÚX5#√~"À}•“s”œE’⁄Oƒ{9e1.R5⁄áE[◊‡fdëX,ò&zLPFÄçt¶˚˜LÎ®_ﬁ◊§)$êtéOBòB#ÿfNdƒI-`¬®è¸ãÅ]7bM0+tF_åÖÁVÈ—'-·£ÚP;éØF±c/‘‡5  ¶Âhl-3«kgû∏¬936:ÂÏ	∏ºñ|%Ò¨‰#;‰oV¸+!Z<˚›JmôóçkDÿÁÊñã|]ìå-æÁºﬂçvÚ…5(à[t◊1}´ôëz G◊úÏr»¸ùJ“gH00÷q‚¥O~‚¢∞@®Üæ∞v©ﬁ°¬!¬ﬂp‚eáR8Z‚†*Âñ›cYp„Bè|öoMêgïï—ú–d‰NÂ+OQîå√¿i4œ`¥ˇ÷e†£ú∆§Ü)W€]?Õ5„¯Î £ªzwb!N∆Ï•à±•ÃDÅ∏•ª”vNπÓÕ	iÍçâPˆö±ÒO–∏
Ä¶›îE‰ G˚Ú √éX≈ÙL`G36<„iQB˘dëÓ€ã|àPê»™f+´¯©æ;˘€î™Œ>V)£[£|¥7)4ì
Ï˚IÍö-∑≠I
Ñ ìú—óuﬁO% N∂a ì©_®J‰
ÆG.È2Í>uºÎäÌ{°b‘Œ°πWé96Õ<–Aª˝‚¬ˇ¸É‡√yjJoùKK!…r‚TZƒj–·Wƒ8⁄C«7ÿπv4æeÙ<(xº!õ œØ[ı<~	+Qs,Íˇ–Éegπ§ì*„ã«©üüVç1ÖØ5ı‘JZ7Ncn¢«†R˝Û2E5%!ù9$ÂÉŸÄIá9˛èã∫Ò|ë1rm€YÌ[]˛X·¶/ô—•ipÂè#n;œõ<≥}ˆ=ÍÇ@W ÄÏl¨xπÃ»p†…ê–úø¨ëFª¥®ì1ÓÃÂrtL¿
d•ÿ$≥“û"∂©¨˚	áèÏ¥üÏÚbØ∏ `RàùÕ#ÌP†ÔÀ„åAV˙‚Ïìõˆqs=QÓ˛¿ˇ9c L˙t6l§∞˙ãte˘(ØJ-jl0„Ïÿüëò’ã”F3»˛≤2@˘˝ä}Ò:@I{œîçG	IùÂœœAø∏‡Ú9Û5ê£¥Z	WQ⁄Ûê^¥ÈæUà…ûo¸Ò¿ˆ/ÒÃ◊Ø∂ ¬kYΩSAÌ/§®b XäpßË{l"R®IΩŸÀî™ÒîÇ+ªı"ª“v wîW;q
ñX—Èè1‘JÊùùp•d≤¨!u˚8ßÁ÷X3"§ùJôF:û{WK∫Çö.ÑGâv&Ú÷ç7·t‰ƒü;ÑG:&ô†ˆÙä∂™w ,Õ˛±\†Xñ%o Xì+œB~†ñy“≥DÜàÈÚèΩAkÖz+V¸Òµ&~’˛iÿ)ü•”ßH¡¥&nsm√ãŒeyÅıùfEò€5œÚ__}5µ§˙ö'ëéKxı†œIäU
ÀîÒ¢Kvré‰?Ï^¥¥¨’íÕÙBC”ê¡`eI£¿d∆Aärüüi„∫Ù9›˘Êá]‹õ[1WV_Úíÿ´|Q†ˇs∆≤⁄êe íë˝/…π#œÿX¥¶¿qêÛÓ ›(Òﬂ"R‚í¿ ⁄©üæ˘ñœbÙ™ûß˘≤0ª·T™ß*H“‹H€ØdæxùïôΩ∑>W¸®ÖRUˇŒ„r©˚z&{uÓ’Ì >πPX4I√ı˚π»ÙÊÙÕ
}˝J{8Es∑[V:‘∆ç÷'Á˜ã‡hR“ò≠ÓÕµ,”	±1∂ŒÆ¥n8%ﬂJåÂü¡NÕ8Ä> |–o®ƒå=,ñGƒ.h&”˛WHÏÂMwëCTâòMtr¿Ñdˇ AßóI;A(åò»ˇ≠†ö8ŸÔI2(S∫?¨<yÏ›ò5ê mäåhµh Q9AójÁh*u≥wr.sΩ\Ω◊˚⁄*ìúéHW—D]g≠À:≥G^‘D7úzÂÒ˘/Zõ^ù˛ÌÍAÓœãÔƒ8˙\èX>(ÀB-ÿg˙ -Å"˛ºh~\«§tÔ⁄˘,rM{™;’ÿÄ˛ˇÁØ;ËÕ	ù g£[4JÛ§kÉÌ…f0GˆUi<ã’I˝oÄ¿TÔ∆ =óM4Õ@÷˙p…¿âe~w…SÇF1N†s—j∞‰6Ç‰A,´ÖG®b+ç†U∆.◊±ïYqA¬4)™ﬁŸXXbÿ˚|iﬂ∏≈X˘€*ﬁ„ü¨RIﬁÆﬁ\P~È˙Ùs, ª»Ÿ‹y3qÁØ∆Á}¬œj\c2®ãÇI*Ç√üeåé)íâ¬Ç
{¯éa£
:2Ca Ö«Q©À?Bâîjü¸‡û>Œ5™PgzÛN‚ó@;Ox_j8∂˙#9."h˝Í`2Ü Xöéi‘î˙
M>“Qã)öA·®x^ÂI6ﬂ5ÂTπ€R¸&öÒ"ÈZÀb÷ÔÄñ⁄2‰ÖNã§óÂ(≈øæ'Ì”÷C”Qt‹À_~ü\‹m|Eﬂb¯vétÎæl‰æ™ó6?¸%≠5√Ä˜˜Îó‚VF@@©ä[N§ò˜œ->¿{¶</T†0ô™ƒ4d∂tΩvs3◊#70ÓíGª›f∫·ΩädBWΩ«8≈˝~ª~fG7DTË§âj,æj`;˜Ï=ª2é›˛#dÄH£›6Aa5◊≠ÅÅÉGÍ©vä·õdàµÎx¶8#çz˚L∫-ºûq‚$C∑òãôà¯≠ìNœcÒVrWÚ˚K9GV†+ËE€≥9aæ@˝44‚hu‰E-B&9âAÖçÒíyÓhË1®P©°,ÛﬂÈò:≤õ8ú◊∫^0É;ò1,∫%5öD~∏¥∏⁄Ï&É%åX¥'¬ìµ¸Ñ≠S®∑¨n8©ó_è!ﬁßˇj@˝ÒÎ∞BÀåLï1L\j~◊õ™ùΩ{˜˛5¨x~°gıûÌ~-0f»$÷}±GÖ#ó,A÷Á∑˜—ﬁ%bBÊP3á∂@Ÿ8Hœ<ª∞ïùm¢Á0ˇ	eπ©qf˙©.Ç¨2ÿñú˙≠ñ?Kî+∆6FU y≈π(Àgˆ≠(Ìâ$úÌG°XCÉ™s¨$0Åﬂ~P∞:7u)∏†qï∂PÍ@•ä˚@‹¡OÙèH@·ﬂâÍ Pı:r “&—*öÿ\ã2»ƒÆõ“∆â÷„ÒryÂΩv¥e∫é˘dxß£YõLtGÊ!« wé-Q¸;Q2›(æ9”x¬\-aòdFΩ«ÿ√ (∆È√ÔürV§V£JãëG‚üáMFgÏ√ŒQgpô1^ƒ™w≈áqÃ^§<qÈÜqUÁ◊¬≈˜!ƒU«fb∏Qã`–Å˜x%K≤M|≈xΩ2Ë%]cHEDT+muS°TKÀí≠8˝˚*Ò+ä¬á@Ët’U…ËÑ¿}_D'¿:Híb …∆¿üåm:´&üÁπÃì‰'#¿b“¶÷#G¥ÊÏ’∏Õ L”ìí<ß'"-K÷|[$ÆEºx(h+)W€ …!“íŒ®r€ÈüçΩ„œ©·Ú5Õiê ﬂ∆L¸æÆ>-–e±˜˚ËÒÕU^$! Çe™ã2˙yì¢»¨ËÀ>òdå6m ŸÅáKA√ï|pCYvùäëdÈKL‡KEK˝3ÖcÄé( ãI1¨¨Í1tM≥Fh<œÙ^®ÈÈ·Rï¢ìØ¨Oèp(VrÜ’e{9!°º·≥˛E≥w°5´2ë!Øıpı?πúÄ-èB˜Ö’Y@lKäü‹yæ›ÜÅœf¸,˙_y≤Í ∆±¡√yV~ı]YÂ 3¢æ[∂÷©)¢Åv˛¢H÷Ì‡3æœ˝º|˘˚”zgoÌEﬁCÛÖÛ˚D) U@∏@J]F!LR„ãû˜8¬'¿Tâï◊s∞êï$∞9Öê[∆í8óõ‰/É¸UÜÓK ÄÖmìÛ¿·—aa˚Â  :°§BU˙Z∞‘Ì'≈´⁄µqÌJ?FÌ¬}•’ñ®fÆ'zH1†t—‡Z¨+ùMdDb7IWQêBœ,{Ëî}ííçkû
7∑=à|hòùÜxgﬂ•‘õ≤Ò–H9vX‚Èœ*q0·üÿ–`Â¿`-Ë$Y™§ÚFÉ¨Q0Ù”ÑdÀRl—i+y‚≤ˇf¨⁄")`ãoKè3å·h—´:PX§Ii∞yålÔôíkëûÿì÷«åtDqÃû≤d]ˆK‘'ÎÑr°W»†!ÖEr(SAèÿT?…ààiçU^WKY∞°uçÂíê¢«˛#ÑÑ◊ŸòÇ&FÁ¥ÒÖ;áE¶®t®·áÈˇDfÿây≈ˆUó£*¨≥˝ôﬁIﬂ˘2{á«’^öDG@Û"4
ËàˆXê@Ó_ã °ŸÍ~ß‹÷ãû…Œ¬√®
ß-%5ÉrLm≈Á76Œﬂ_ÕAw;VDü,M]˜ÇGÑ•˘/(÷áü(ÿI[çÁUS.#–î<ÂK˛ÙW∏∏“Õ·—3”•Èo †·Sªy˘5Z6b &«‰2ñ%Ø {€(sì‰[Àhzπ;˚o<â£muÜæ“≠ËÓ~˝æˆ∏ôuΩ˘›≤∂√÷Nui<ˆ¨}˛ÏwåSå+{®Q∆©ì≤A‡qãSO7Ë≈ú≈ÚÑÀ¶„æ#LR‘¡,	5!”‚é≥,mÈ	Ø‚{s7;•∞ê˛±áóûDkpéŒ∆û/6é´«ÓLÃÛÎ©F{;ó∆tÔê∂øaû€eoÀÀ÷=’ÚæÄ˛’2úÔ2†…´≠ËzßÙ…C`B∆Rÿ⁄5˜z‚”" ˙uZ€Û¡í'ŸCO
≠.çH¯ßw¥Ê° y-ÀÊäà≥¿ê%Xä8ÑÉ‰¶‘¢ÌŸc∞jä™óã˝∆ßäò ÄX§;oA£ò ﬂ‚Òy«ÿœ;·Õ_ÙÇÜy£W6å›¿ã¯hrEπ™~rXS%zÃ◊í"  xˇxÏœôjVN’≠Ï◊B,Â¢ƒˆ∏ÇÕgUÂo n“(c.2Ö¿⁄ÖÏK‚ÓÏ±f¸(°Ú∏Ì˙“Oue1ÒÄ…6u¿Æ)±•'œˆ:n˝˙Œ∞˝]$7OmÄ1M◊ñÃùP(.Ω‡g¯ŸéâEe0 @ºúl†§Å@b©é¨ñãuÌGÆ˘#ã‘∫»9d!üÙ⁄ó≠µ≈§érsîQbÈÊ◊ZıÀ±3x˚‡ ¯@+˛%•|ë•Ò∏Æ»üäÌxj2Ä´ˇüAªfß¡‹ò@£ü©\4ÆÄÂ)ˆÄä¯*áht∏á/4¡SG•ìÅÙ¡⁄jÿÀ‘øEóáêOƒÁJ•OÚáΩ„Î]…}Ûõ‰πö±’ñs'ßæÎ<Ô≥«´ƒnc ¿äKaÌ¿ˇƒXYa¸⁄≤4ƒ®?»eıX˛˚√™n`&◊”&t¯opJdÅ†ÏÎ	lÚR-º,Fêf`Ø2ÌH∆Ÿäo	Z1è;∫ É-¥ägÊ#ªØ(H\Xíˇ˛m$x£Ì{≠›Ôãhõ∂í„Lo∆3nPÚ[⁄Àgõ◊Ç~ww·ÆN‘’ìÑóG^F9ø3æ·Ìô˜"ÛÊ±).Û|u¡cß.¸Ü„‹]›ƒ)°1wgRœàR¨Ú“}yUÜ/Ï70§:ZÿÊá#ÛBÏÇKl3åÈ∂†Á√NsŒQÅWà•5}[Z«™öÖ¢˘¡ÒM
-V∑t,˛ogT»†ïÌﬂ26ß,õ.|Ôûä{ßΩ™‘àW©r≥$m‘,ƒÈ0ÂÀ	Ω)£¨ñàqS*w÷nõ0áAo∞ŒX°*\z±Vˆˆ)M>v∆vë˛Ú@ÖŸ€˛«∂7uó ≠çV:n)$&ÖIj5B∑y~ÕÑU∂¶bî'¢‡‹ın8∆BQÀ{$›X,⁄Òí"=¨¢|I/Ï°J DÉ©ˆ%VüËî63y?r¬ìIÛ+‡ã±ÂˆWÔ˙o;Âû*k=hı5ˇ∂.D	ê aÜ∑¨Qxeô‘8¬^=éû8ı˝ËW‹ÏüDYd¸‹ø¬Cô;¿z(#º#É|›=,´hT$∞O√Œ´H¡¶ˇæ—¬Ñ·ﬁÄ@cL'iL∆j´/w—{Edﬁ¸ –ÕÕÕ;<nN˘Œ◊çvDDDŒ ,¥3étã…Nã˛∆Òí u7ÿo`"`0±sô[ñ¬¶Ä§¸s9∫ªOÖ6ùØ“c”ÚA¿W8ß¿‰[6ö¬ÌK®% B5ˆÓ3 ’¬™ˆ›ásìRƒ∂-@ëeß¸˘V#%úCMÕ⁄~Rq˚}“ÕÊ¯·¢ïæjÎJœΩæ>Z`o#3≥ïÇ”p0RJ	KÂÍUe’p7‚†ö%¿ØJqòÙ≈jfz≤78°KçìïC≠îA;!∆ `èíØ√$&∑\Œr ˝ÆKêÁ©ÁPöu©,ã¯_v'°‚÷¬àÕ≈çÿjÁ^äâ<¨”≠5Qå˝>ìØ5ÖMˆèP+í◊hG˘å„^0»Ê0@—œå.èÂ⁄ÄáΩe«ÃÄe≤ËÙuÃ†√á+ê!FB„Å@#¡öÅ÷…_Õë‡∫q≤HÅÃ""',∆L$hwÿ‘`¢k≥rX'ú∞≤æH€^–Ëtè_^~‘ƒpp®
/FZ„√¬haÅ–0–ädÑwÆl6OpÍ uzÿöúÂ)ê˘lÅúÙ±›L≈ïI“∂¸π‡äÕs¨çB Ån,ÿh”Ã|ë–:.ƒ•-éJ–e=‹èôÆÃ¡cõoµ§…Ú
7ysK±∑Ωq¬dE7LÀ]%‡V3[$2“˘` '8krö®4kkrÊ˙cÛx·ö»4ò§4:ªF¬1ß2|b?Râ¸÷c¨◊õu≤eÙÄÅ/xfv¶€Pﬁ≥ùOÎGp˝$∞ ¥dK+∏«È‘ﬂB∂S«°éZÕ?KàïptÏ”ïC…∞ÉŸïN3†Q¬‰∏åÉ-˛ëïù&Cçµ∫Xß∑!<‡RáÚNÈpS”K‚›Ç_>O≥`m«;BˇG®	 ˛ótœÜœQ˙‡ƒréâ(ÈW√1ÄœÑöåú‡ÔD¶mo'Fi–Ûs}°ó=CkÃ7QXˇ‹H-éí’w]≠__^BïDìÿi‡0 ò:â˚˙££N˙ÃVoã|»∂„wÄ∑&›æÌ+ êî≥÷àÖÇ—~w7sfiûUcI<‹ög7g]Ç∏é]D;ÊFÜÉ–¿√AøyXÂ“Êƒ_€¶ÕŸ´6uDÈàÓC∞:’¶√sπ≤LjÖGuµm	°n@¢lƒ$Îx±?‹¬Jh$ÁÆ•wD]Lßß %YÁ®á∂ÇXf•≠Ú±”… «‚Ω€˛ØËîMUD¬≈EÎ_™›Ç<Äà8£ÀC‰(}ú®e∫úCB`BoÃ*áÕd‡K¨2F’GK∫∂T\§TıùX´`ïaUÃÜ¥fëUf¿b`[´Ñ–±ÙæcvÆláÙœß≤\[…E
8h∂˙Ã§[ïV∫?øTW0Aà6væãµ`bj8»úu};J¶£+÷9Ä◊÷–(≠æ∏i?ô<l˘üÀÈ |ÕËÌVËU¡ÑæäÖ‹±b∆ßº¡J,ﬁûd8ÊuÔºÿ˝‰π∂ûﬂ∑=VNUOÀ⁄]Ω»Lπ/`}kÀï:bI—ôánvyÅÒÿ¥‡iÂó…t—°¢-∞Â>†p á_ŸΩ⁄Ñdd•œò˘Ö¶ÇûnË?∂˚æZÈΩTI†Ç$ t·S¥"ˇ>4ñµåò†bE6ú±`ñ;øıü/îB÷¯w~)TS-5ÏÚô{_0≠€Ñ¡zßÌÅ√ùu»f,ÑÕQ'•‹®X¥g˙ë”4X á6—…)€NNRÌ»x+-~îä!ÄXö∑¥QÀH¿.Ó	@Õ·”@B"†˘öú¸¨rßDìEÇ◊—<r≥[B…îöi
Ã!#Ç%∆N`
ßØﬁÛ£Ÿ–ã.^«(Ÿ üæ*j0J
≠}PüÚ˘¨˝{üˇ]J Ä&¶Ìü√æ‰ ‚1æBõÁf%åj0Q‡∆NÂ6Ö'snªmîÃ0ië\´±ã¬°ì†«fËfÃJ˛,Õ⁄_/Á¯tw?(œ˚Ê‡˛qÏÚh ê{qã˝è–>¸T√»CN¢!á?XÈÔÇMüÕÄ*>ìÎcdAæèŒû®(aÁõ@—W[GÁΩ¸ú3úJ	ö¯è^‹†÷@4∞LTŸbπW€X3ÜNUT∏K‚uh∆Ã¬{À#ÓıG≈Åö%«±ÅXü§e"í‚ïGxÙË≈5Å?'% Ê;wÁ§…Tjï3§⁄ÃÜ$≈:a¶g°ÉÏ∞~2yHëÅœÜ|);˛,ƒÊpî›2®(jäòA˙ö‹◊ü5™#I≈ZL6îRøƒ"L+¡-ÇÇt≈®0Sà»ÙàNèh˘®Mòó≥«I‡‹Ì‘mE4¿’ÄêXÒ‚ññ∞ÄÍ1g_-2€8øTe4≈Acz;Åà-£ †,°u9é?Î‰z…T$&Rb|Ÿ
ç~¨2ÛñYÄ*#ËîÙöé$ LCÅïÙœ” ,lN*˙—V˚∑ßœ∞ë8.S"Õ7ËGæ˝A#-»Ω–.I3·™”µÚ?Çµ¢µBf†¨aHe«î}Ä≈í‡π”ık{ê2âõπÜﬂ¸Ûè–eÑ?›Ê“w¸EıÑZ~à$§ÑJ+fÁ:§áÜƒÕzoS∂'gÁù¯:¨çyó)Ω[¶OW{fY1bÜ#ø£IÂ•5˜: \ÚÊl°\2çCäeXsømE‰Áp.Ÿ7·ê≈ö±BdØ˘f–—P√ï>¶¯ÿ’-vÇ¡»Ø1ç∑ÕG»˙˛,˚ë‚ç3,Í∆#lq≥“πÇ¢FÂÇÃÛ¢x›=¯,È*_”/›÷uÁâÄ”=xFªÿPm·és¬6êpÏí¸p%ïL≈›£!S⁄B‰C5õ∂ü¯[(_:˜NˆˇùÇﬁ%øæÎöÿ˛+°áŒøüèD:<]Œ@Ò∫HÅL^†óJ M≈)≠˘f±…€ê†Ñ¶Ç;Õ§…ÅEÇÜB`^ãO,=6Ë√kÄQ&¢c…§.ê§â¬Ô√¢]¢éMÎá±ŒÔúé ¡ƒ¿πèá‡jÉ’˜≥V$aê∫(o}^{{y›õò¡Îÿb(hª·¶õ´%$ÛtÆ„‡•*mrºtˇNÊl:›π≤s“·WÏK˚ü(AW[V´_":¬ËH Êoπâkˆ¶¶wsG“ú˘e]_7+≤Ø!≈HµSõù>y¯œ¥F€ÇórL`àÚcê1¬L58;vB¡˚J≠õÉYkùZu∑í‘ΩŒ⁄ØÉc⁄%57í°ûÑûê/ﬂÊÈ’„)±[∞QÛﬁßïN´¢hœ Bh kX› [D·(‚ ı”}∂$uijogp-MgÁ‘Õ ôH“¿≠ïX≈nÂ®∂ Ò´B-g‹äaGùKÑ:DÚ‰/0π∫Ï‘\^€GÙ|´ø˝18€L±àÿ†!∑Xueãı‹≤eB 7≥áÀè∏{qe›ﬂÏ◊1HH‡ODØ`˙√ÎˇÛ BV0«%w≤;¬≈y¿f–Y˛ï
O¶Ö 2\‰VQ§»ÉÇó©÷Ä˙ntÿ∏Õ?€f,"øå£‡»ò Ä”≈‚3=¢ç)¢¸4ΩieÆjp::ñ°)¶àLÍ°õéI„¶sy„a5‹à“h„rgó®w˘‰]EöË√ˇúÇˇ@@r≠Ÿ2ˆÀCTkÒÖ≈˜ø∆2kÇ—!0:QóxV·jSJ`aa0ºç6,i/ävÎãPr¶≤¥Fƒ5(JPö.µˆ _∞]h`$¯7'zû]Ùo˘wµû·z“ë¿Ó¬Œà_ÃT ä’k∑@ïÇ¡Ê}ªoB;7ª|6ª∫™€Ç•∑hb…
óõ=Û’va1M(
€3≤tŒíJ6D¿⁄ïp/åC†∑g.ı`±Ïœ1óY©(ÇœmM5!Í#£LÒ2Ê2k‹â(ı¿ ∞b6n5/3kmkUtˆ‡òM'f$≤ΩäPˆ⁄Q«J ü !}tÈ^8∂PS/J^ÒÀØz$œfs_+ﬂ˙ æ∞¯	ó¥5jõ`ìt»Kô…;õ1Ó¬mD3…:VúM2Ò∞ñ2xπFohy‘ZÌg_	5ô3µΩW˛»≈lÀBL¨±g√EÌf ⁄Y†í çi	¡WÁ«‚õø¸2kµÖ„Ã'ãœˇ∞Ë√g7⁄ı€”5y¯9=†í9"ªË(˝%⁄∂ÙãÔúPƒ£eK0®±¸Ô/‚LMÎàõY\‹&∆(HY‹œåëYåÉÒÓi>híÛœá‹„ÁŒKLÁ≠–K∆°ïm}eÎ[∂ªy®Ó~‚Sj˘wÜ®PvG‘ÆM-Q+R tD∂'Nm¯€∂¡:;9µ52îŒGÅbˆeŒ¿˘ÉVù9Õ%—–Ë⁄ëÅ|’¶ó›%Ñ˘!ÑˆµUîòRZbœ:d•—ã5=híû0G<É√Ñ˛wW¥‹"(Íßy˜FßE√≥Ãım6·oØí⁄çf^Ñsñﬁú¡b>°õ¥VMD·$í*KùËÔ¨TWC√ÎT7Ó}o8äY˘W° Ûp¯∑ÄˆRló]÷ŸŒ+8! ¨fµ¯:Çu–qcD™œà®eÇµÓp¸E¬÷O-~âΩ¥§öò≤©¡EVg$>H„d1d¥4ùb°˛»;}~œΩØ=–6xå@b0ô57[>'º…ùj‹æç
åWπ¢õË]}ßN´(ö:öÁÍÿíËπÑ≈.âÊ¨3Bÿ2ûË°√ à^Q≠#9±!£_æqG%q7#Üª	$€˝ˇÍêLΩ¸òq KûÑ&O®]Ÿx¸Ú≥4Ï'Ônâ˜˜â˚ üâî◊ÿ¡b˘Ri˚	 Öê6ƒ´ï´pΩ“CbÕç`tıß"GûD!æïC˙¸û˜a”:„3G¯r…ƒœRyZøÈ∫N”ÃoöÆÀ∏˙ôø&qqPB&Cq`Åb'í‡∏ÆŸÙ)ﬂx–±
k[Zg≥—Ëfm1Å%ü“¶◊Q⁄îﬁÊ·∆	Z¿ÖßÚXTa-Ï&Ûá¢<Æ-eòVk+µÂeÙç)øéYgåyS˜îp±ò‰4›ı(Tµí˝su6ÅÎÓóè÷Äî∂ò*ïWwô”%˝ˇ“Æp
 –¢óÔÑ‚,&Ñ‡‰RN6Õ0â€ºØ∂wjÖ5Å*åO-3¸}âK‘Ô>)(ºOêq]Sà«/¥=∂±ã¿T}{zØ¬n±KêíÊÅkBß0kc2≠y˜ˆé \pÂ=O©]¶4·{)˛§.‡+Ÿ«WâqNP3FP⁄P÷w¿Ùu∆⁄Ë›úΩ6m“∏(uÁK˙_ÅCÿ iO!b6àò…jÛ(¶∆ö»ïh|Cø~|F2‘ËÊÌñZñﬁ—L[È…©5huÒ˚Yb4æ|àF+ûà$¡ÑåÁäBè6©kMå5ì/æÇ¿.T⁄dv^YÙ.           É5®mXmX  6®mXè§    ..          É5®mXmX  6®mXf§    Ar u n n e  ÷r . h t m l     ˇˇRUNNER~1HTM  7®mXmX  9®mX•u                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         