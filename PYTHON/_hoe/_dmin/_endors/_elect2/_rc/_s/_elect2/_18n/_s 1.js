{"version":3,"names":["_importDeferProxy","init","ns","constValue","v","proxy","run","arg1","arg2","arg3","Proxy","defineProperty","deleteProperty","get","Reflect","getOwnPropertyDescriptor","getPrototypeOf","isExtensible","has","ownKeys","preventExtensions","set","setPrototypeOf"],"sources":["../../src/helpers/importDeferProxy.js"],"sourcesContent":["/* @minVersion 7.23.0 */\nexport default function _importDeferProxy(init) {\n  var ns = null;\n  var constValue = function (v) {\n    return function () {\n      return v;\n    };\n  };\n  var proxy = function (run) {\n    return function (arg1, arg2, arg3) {\n      if (ns === null) ns = init();\n      return run(ns, arg2, arg3);\n    };\n  };\n  return new Proxy(\n    {},\n    {\n      defineProperty: constValue(false),\n      deleteProperty: constValue(false),\n      get: proxy(Reflect.get),\n      getOwnPropertyDescriptor: proxy(Reflect.getOwnPropertyDescriptor),\n      getPrototypeOf: constValue(null),\n      isExtensible: constValue(false),\n      has: proxy(Reflect.has),\n      ownKeys: proxy(Reflect.ownKeys),\n      preventExtensions: constValue(true),\n      set: constValue(false),\n      setPrototypeOf: constValue(fa