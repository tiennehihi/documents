t) & 256 /* EvolvingArray */)) {
          return false;
        }
        hasEvolvingArrayType = true;
      }
    }
    return hasEvolvingArrayType;
  }
  function isEvolvingArrayOperationTarget(node) {
    const root = getReferenceRoot(node);
    const parent2 = root.parent;
    const isLengthPushOrUnshift = isPropertyAccessExpression(parent2) && (parent2.name.escapedText === "length" || parent2.parent.kind === 213 /* CallExpression */ && isIdentifier(parent2.name) && isPushOrUnshiftIdentifier(parent2.name));
    const isElementAssignment = parent2.kind === 212 /* E