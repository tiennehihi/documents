vgo/plugins/_collections.js"(exports2) {
    "use strict";
    exports2.elemsGroups = {
      animation: [
        "animate",
        "animateColor",
        "animateMotion",
        "animateTransform",
        "set"
      ],
      descriptive: ["desc", "metadata", "title"],
      shape: ["circle", "ellipse", "line", "path", "polygon", "polyline", "rect"],
      structural: ["defs", "g", "svg", "symbol", "use"],
      paintServer: [
        "solidColor",
        "linearGradient",
        "radialGradient",
        "meshGradient",
        "pattern",
        "hatch"
      ],
      nonRendering: [
        "linearGradient",
        "radialGradient",
        "pattern",
        "clipPath",
        "mask",
        "marker",
        "symbol",
        "filter",
        "solidColor"
      ],
      container: [
        "a",
        "defs",
        "g",
        "marker",
        "mask",
        "missing-glyph",
        "pattern",
        "svg",
        "switch",
        "symbol",
        "foreignObject"
      ],
      textContent: [
        "altGlyph",
        "altGlyphDef",
        "altGlyphItem",
        "glyph",
        "glyphRef",
        "textPath",
        "text",
        "tref",
        "tspan"
      ],
      textContentChild: ["altGlyph", "textPath", "tref", "tspan"],
      lightSource: [
        "feDiffuseLighting",
        "feSpecularLighting",
        "feDistantLight",
        "fePointLight",
        "feSpotLight"
      ],
      filterPrimitive: [
        "feBlend",
        "feColorMatrix",
        "feComponentTransfer",
        "feComposite",
        "feConvolveMatrix",
        "feDiffuseLighting",
        "feDisplacementMap",
        "feDropShadow",
        "feFlood",
        "feFuncA",
        "feFuncB",
        "feFuncG",
        "feFuncR",
        "feGaussianBlur",
        "feImage",
        "feMerge",
        "feMergeNode",
        "feMorphology",
        "feOffset",
        "feSpecularLighting",
        "feTile",
        "feTurbulence"
      ]
    };
    exports2.textElems = exports2.elemsGroups.textContent.concat("title");
    exports2.pathElems = ["path", "glyph", "missing-glyph"];
    exports2.attrsGroups = {
      animationAddition: ["additive", "accumulate"],
      animationAttributeTarget: ["attributeType", "attributeName"],
      animationEvent: ["onbegin", "onend", "onrepeat", "onload"],
      animationTiming: [
        "begin",
        "dur",
        "end",
        "min",
        "max",
        "restart",
        "repeatCount",
        "repeatDur",
        "fill"
      ],
      animationValue: [
        "calcMode",
        "values",
        "keyTimes",
        "keySplines",
        "from",
        "to",
        "by"
      ],
      conditionalProcessing: [
        "requiredFeatures",
        "requiredExtensions",
        "systemLanguage"
      ],
      core: ["id", "tabindex", "xml:base", "xml:lang", "xml:space"],
      graphicalEvent: [
        "onfocusin",
        "onfocusout",
        "onactivate",
        "onclick",
        "onmousedown",
        "onmouseup",
        "onmouseover",
        "onmousemove",
        "onmouseout",
        "onload"
      ],
      presentation: [
        "alignment-baseline",
        "baseline-shift",
        "clip",
        "clip-path",
        "clip-rule",
        "color",
        "color-interpolation",
        "color-interpolation-filters",
        "color-profile",
        "color-rendering",
        "cursor",
        "direction",
        "display",
        "dominant-baseline",
        "enable-background",
        "fill",
        "fill-opacity",
        "fill-rule",
        "filter",
        "flood-color",
        "flood-opacity",
        "font-family",
        "font-size",
        "font-size-adjust",
        "font-stretch",
        "font-style",
        "font-variant",
        "font-weight",
        "glyph-orientation-horizontal",
        "glyph-orientation-vertical",
        "image-rendering",
        "letter-spacing",
        "lighting-color",
        "marker-end",
        "marker-mid",
        "marker-start",
        "mask",
        "opacity",
        "overflow",
        "paint-order",
        "pointer-events",
        "shape-rendering",
        "stop-color",
        "stop-opacity",
        "stroke",
        "stroke-dasharray",
        "stroke-dashoffset",
        "stroke-linecap",
        "stroke-linejoin",
        "stroke-miterlimit",
        "stroke-opacity",
        "stroke-width",
        "text-anchor",
        "text-decoration",
        "text-overflow",
        "text-rendering",
        "transform",
        "transform-origin",
        "unicode-bidi",
        "vector-effect",
        "visibility",
        "word-spacing",
        "writing-mode"
      ],
      xlink: [
        "xlink:href",
        "xlink:show",
        "xlink:actuate",
        "xlink:type",
        "xlink:role",
        "xlink:arcrole",
        "xlink:title"
      ],
      documentEvent: [
        "onunload",
        "onabort",
        "onerror",
        "onresize",
        "onscroll",
        "onzoom"
      ],
      filterPrimitive: ["x", "y", "width", "height", "result"],
      transferFunction: [
        "type",
        "tableValues",
        "slope",
        "intercept",
        "amplitude",
        "exponent",
        "offset"
      ]
    };
    exports2.attrsGroupsDefaults = {
      core: { "xml:space": "default" },
      presentation: {
        clip: "auto",
        "clip-path": "none",
        "clip-rule": "nonzero",
        mask: "none",
        opacity: "1",
        "stop-color": "#000",
        "stop-opacity": "1",
        "fill-opacity": "1",
        "fill-rule": "nonzero",
        fill: "#000",
        stroke: "none",
        "stroke-width": "1",
        "stroke-linecap": "butt",
        "stroke-linejoin": "miter",
        "stroke-miterlimit": "4",
        "stroke-dasharray": "none",
        "stroke-dashoffset": "0",
        "stroke-opacity": "1",
        "paint-order": "normal",
        "vector-effect": "none",
        display: "inline",
        visibility: "visible",
        "marker-start": "none",
        "marker-mid": "none",
        "marker-end": "none",
        "color-interpolation": "sRGB",
        "color-interpolation-filters": "linearRGB",
        "color-rendering": "auto",
        "shape-rendering": "auto",
        "text-rendering": "auto",
        "image-rendering": "auto",
        "font-style": "normal",
        "font-variant": "normal",
        "font-weight": "normal",
        "font-stretch": "normal",
        "font-size": "medium",
        "font-size-adjust": "none",
        kerning: "auto",
        "letter-spacing": "normal",
        "word-spacing": "normal",
        "text-decoration": "none",
        "text-anchor": "start",
        "text-overflow": "clip",
        "writing-mode": "lr-tb",
        "glyph-orientation-vertical": "auto",
        "glyph-orientation-horizontal": "0deg",
        direction: "ltr",
        "unicode-bidi": "normal",
        "dominant-baseline": "auto",
        "alignment-baseline": "baseline",
        "baseline-shift": "baseline"
      },
      transferFunction: {
        slope: "1",
        intercept: "0",
        amplitude: "1",
        exponent: "1",
        offset: "0"
      }
    };
    exports2.elems = {
      a: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "graphicalEvent",
          "presentation",
          "xlink"
        ],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "transform",
          "target"
        ],
        defaults: {
          target: "_self"
        },
        contentGroups: [
          "animation",
          "descriptive",
          "shape",
          "structural",
          "paintServer"
        ],
        content: [
          "a",
          "altGlyphDef",
          "clipPath",
          "color-profile",
          "cursor",
          "filter",
          "font",
          "font-face",
          "foreignObject",
          "image",
          "marker",
          "mask",
          "pattern",
          "script",
          "style",
          "switch",
          "text",
          "view",
          // not spec compliant
          "tspan"
        ]
      },
      altGlyph: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "graphicalEvent",
          "presentation",
          "xlink"
        ],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "x",
          "y",
          "dx",
          "dy",
          "glyphRef",
          "format",
          "rotate"
        ]
      },
      altGlyphDef: {
        attrsGroups: ["core"],
        content: ["glyphRef"]
      },
      altGlyphItem: {
        attrsGroups: ["core"],
        content: ["glyphRef", "altGlyphItem"]
      },
      animate: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "animationAddition",
          "animationAttributeTarget",
          "animationEvent",
          "animationTiming",
          "animationValue",
          "presentation",
          "xlink"
        ],
        attrs: ["externalResourcesRequired"],
        contentGroups: ["descriptive"]
      },
      animateColor: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "animationEvent",
          "xlink",
          "animationAttributeTarget",
          "animationTiming",
          "animationValue",
          "animationAddition",
          "presentation"
        ],
        attrs: ["externalResourcesRequired"],
        contentGroups: ["descriptive"]
      },
      animateMotion: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "animationEvent",
          "xlink",
          "animationTiming",
          "animationValue",
          "animationAddition"
        ],
        attrs: [
          "externalResourcesRequired",
          "path",
          "keyPoints",
          "rotate",
          "origin"
        ],
        defaults: {
          rotate: "0"
        },
        contentGroups: ["descriptive"],
        content: ["mpath"]
      },
      animateTransform: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "animationEvent",
          "xlink",
          "animationAttributeTarget",
          "animationTiming",
          "animationValue",
          "animationAddition"
        ],
        attrs: ["externalResourcesRequired", "type"],
        contentGroups: ["descriptive"]
      },
      circle: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "graphicalEvent",
          "presentation"
        ],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "transform",
          "cx",
          "cy",
          "r"
        ],
        defaults: {
          cx: "0",
          cy: "0"
        },
        contentGroups: ["animation", "descriptive"]
      },
      clipPath: {
        attrsGroups: ["conditionalProcessing", "core", "presentation"],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "transform",
          "clipPathUnits"
        ],
        defaults: {
          clipPathUnits: "userSpaceOnUse"
        },
        contentGroups: ["animation", "descriptive", "shape"],
        content: ["text", "use"]
      },
      "color-profile": {
        attrsGroups: ["core", "xlink"],
        attrs: ["local", "name", "rendering-intent"],
        defaults: {
          name: "sRGB",
          "rendering-intent": "auto"
        },
        contentGroups: ["descriptive"]
      },
      cursor: {
        attrsGroups: ["core", "conditionalProcessing", "xlink"],
        attrs: ["externalResourcesRequired", "x", "y"],
        defaults: {
          x: "0",
          y: "0"
        },
        contentGroups: ["descriptive"]
      },
      defs: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "graphicalEvent",
          "presentation"
        ],
        attrs: ["class", "style", "externalResourcesRequired", "transform"],
        contentGroups: [
          "animation",
          "descriptive",
          "shape",
          "structural",
          "paintServer"
        ],
        content: [
          "a",
          "altGlyphDef",
          "clipPath",
          "color-profile",
          "cursor",
          "filter",
          "font",
          "font-face",
          "foreignObject",
          "image",
          "marker",
          "mask",
          "pattern",
          "script",
          "style",
          "switch",
          "text",
          "view"
        ]
      },
      desc: {
        attrsGroups: ["core"],
        attrs: ["class", "style"]
      },
      ellipse: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "graphicalEvent",
          "presentation"
        ],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "transform",
          "cx",
          "cy",
          "rx",
          "ry"
        ],
        defaults: {
          cx: "0",
          cy: "0"
        },
        contentGroups: ["animation", "descriptive"]
      },
      feBlend: {
        attrsGroups: ["core", "presentation", "filterPrimitive"],
        attrs: [
          "class",
          "style",
          // TODO: in - 'If no value is provided and this is the first filter primitive,
          // then this filter primitive will use SourceGraphic as its input'
          "in",
          "in2",
          "mode"
        ],
        defaults: {
          mode: "normal"
        },
        content: ["animate", "set"]
      },
      feColorMatrix: {
        attrsGroups: ["core", "presentation", "filterPrimitive"],
        attrs: ["class", "style", "in", "type", "values"],
        defaults: {
          type: "matrix"
        },
        content: ["animate", "set"]
      },
      feComponentTransfer: {
        attrsGroups: ["core", "presentation", "filterPrimitive"],
        attrs: ["class", "style", "in"],
        content: ["feFuncA", "feFuncB", "feFuncG", "feFuncR"]
      },
      feComposite: {
        attrsGroups: ["core", "presentation", "filterPrimitive"],
        attrs: ["class", "style", "in", "in2", "operator", "k1", "k2", "k3", "k4"],
        defaults: {
          operator: "over",
          k1: "0",
          k2: "0",
          k3: "0",
          k4: "0"
        },
        content: ["animate", "set"]
      },
      feConvolveMatrix: {
        attrsGroups: ["core", "presentation", "filterPrimitive"],
        attrs: [
          "class",
          "style",
          "in",
          "order",
          "kernelMatrix",
          // TODO: divisor - 'The default value is the sum of all values in kernelMatrix,
          // with the exception that if the sum is zero, then the divisor is set to 1'
          "divisor",
          "bias",
          // TODO: targetX - 'By default, the convolution matrix is centered in X over each
          // pixel of the input image (i.e., targetX = floor ( orderX / 2 ))'
          "targetX",
          "targetY",
          "edgeMode",
          // TODO: kernelUnitLength - 'The first number is the <dx> value. The second number
          // is the <dy> value. If the <dy> value is not specified, it defaults to the same value as <dx>'
          "kernelUnitLength",
          "preserveAlpha"
        ],
        defaults: {
          order: "3",
          bias: "0",
          edgeMode: "duplicate",
          preserveAlpha: "false"
        },
        content: ["animate", "set"]
      },
      feDiffuseLighting: {
        attrsGroups: ["core", "presentation", "filterPrimitive"]