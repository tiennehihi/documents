ias */) {
          serializeAsAlias(symbol, getInternalSymbolName(symbol, symbolName2), modifierFlags);
        }
        if (symbol.flags & 4 /* Property */ && symbol.escapedName === "export=" /* ExportEquals */) {
          serializeMaybeAliasAssignment(symbol);
        }
        if (symbol.flags & 8388608 /* ExportStar */) {
          if (symbol.declarations) {
            for (const node of symbol.declarations) {
              const resolvedModule = resolveExternalModuleName(node, node.moduleSpecifier);
              if (!resolvedModule)
                continue;
              addResult(factory.createExportDeclaration(
                /*modifiers*/
                void 0,
                /*isTypeOnly*/
                node.isTypeOnly,
                /*exportClause*/
                void 0,
                factory.createStringLiteral(getSpecifierForModuleSymbol(resolvedModule, context))
              ), 0 /* None */);
            }
          }
        }
        if (needsPostExportDefault) {
          addResult(factory.createExportAssignment(
            /*modifiers*/
            vo