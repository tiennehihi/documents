import './_version.js';
/**
 * The "match" callback is used to determine if a `Route` should apply for a
 * particular URL. When matching occurs in response to a fetch event from the
 * client, the `event` object is supplied in addition to the `url`, `request`,
 * and `sameOrigin` value. However, since the match callback can be invoked
 * outside of a fetch event, matching logic should not assume the `event`
 * object will always be available.
 *
 * If the match callback returns a truthy value, the matching route's
 * {@link workbox-routing~handlerCallback} will be
 * invoked immediately. If the value returned is a non-empty array or object,
 * that value will be set on the handler's `context.params` argument.
 *
 * @callback ~matchCallback
 * @param {Object} context
 * @param {Request} context.request The corresponding request.
 * @param {URL} context.url The request's URL.
 * @param {ExtendableEvent} context.event The corresponding event that triggered
 *     the request.
 * @param {boolean} con